{"version":3,"sources":["src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.component.html","src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list-routing.module.ts","src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.component.css","src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.component.ts","src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.module.ts","src/app/services/Employee.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8\\\"> \\n        <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n            <div class=\\\"form-group px-2\\\">\\n                <label class=\\\"label\\\" for=\\\"gender\\\">Gender: </label>\\n                <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\"\\n                  [(ngModel)]=\\\"userParams.Gender\\\" name=\\\"Gender\\\"> \\n                  <option [selected]=\\\"selected\\\" disabled>--Select--</option>\\n                  <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n                    {{gender.display}}\\n                  </option>\\n                </select>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"minAge\\\">Employee Id</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 85px\\\" id=\\\"admi\\\"\\n                    [(ngModel)]=\\\"userParams.AdmissionNo\\\" name=\\\"AdmissionNo\\\">\\n                </div>\\n\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">\\n                  Reset Filter\\n              </button>\\n        </form>\\n    </div>\\n    <div class=\\\"col-lg-4\\\"> \\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n            btnRadio=\\\"OrderBy\\\" value=\\\"OrderBy\\\" name=\\\"OrderBy\\\" [(ngModel)]=\\\"userParams.OrderBy\\\" (click)=\\\"loadUsers()\\\">Order by Class</button>\\n         &nbsp;\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n            btnRadio=\\\"OrderBy\\\" value=\\\"OrderBy\\\" name=\\\"created\\\" [(ngModel)]=\\\"userParams.OrderBy\\\" (click)=\\\"loadUsers()\\\">Newest Registration</button>    \\n          </div> \\n  </div>\\n<hr>\\n<div class=\\\"col-md-12\\\"> \\n    <div *ngIf=\\\"isLoading==true\\\" class=\\\"d-flex justify-content-start center\\\">\\n        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </div>\\n      <table *ngIf=\\\"isLoading==false\\\" class=\\\"table table-hover m-b-0\\\">\\n        <thead>\\n          <tr> \\n            <th>\\n              <span>Registration No\\n                <a class=\\\"help\\\"><i class=\\\"fa fa-sort-numeric-up\\\"></i></a>\\n              </span>\\n            </th>\\n            <th>\\n              <span>Employee Id\\n                <a class=\\\"help\\\"><i class=\\\"fa fa-sort-numeric-up\\\"></i></a>\\n              </span>\\n            </th>\\n            <th>\\n              <span>Name\\n                <a class=\\\"help\\\"><i class=\\\"fa fa-user\\\"></i></a>\\n              </span>\\n            </th> \\n            <th>\\n              <span>Class\\n                <a class=\\\"help\\\"><i class=\\\"fab fa-cuttlefish\\\"></i></a>\\n              </span>\\n            </th>\\n            <th>\\n            \\n              <span>Section\\n                <a class=\\\"help\\\"><i class=\\\"fas fa-chalkboard\\\"></i></a>\\n              </span>\\n            </th>\\n                      <th>\\n                          <span>Gender\\n                            <a class=\\\"help\\\"><i class=\\\"fa fa-transgender\\\"></i></a>\\n                          </span>\\n                        </th>\\n                        <th>\\n                          <span>Action\\n                            <a class=\\\"help\\\"><i class=\\\"fa fa-mouse\\\"></i></a>\\n                          </span>\\n                        </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let item of users\\\">\\n          <td>{{item.RegistrationNo}}</td> \\n          <td>{{item.EmpId}}</td> \\n          <td>{{item.firstName}} {{item.lastName}}</td> \\n          <td>{{item.standers}}</td> \\n          <td>{{item.classsection | uppercase}}</td>  \\n          <td *ngIf=\\\"item.gender=='male'\\\">Male</td> \\n          <td *ngIf=\\\"item.gender=='female'\\\">Female</td> \\n          <td *ngIf=\\\"item.gender=='other'\\\">Other</td>\\n          <td> \\n            <div class=\\\"btn-group mb-2 mr-2\\\" ngbDropdown [placement]=\\\"'bottom-right'\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Action</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle-split\\\" ngbDropdownToggle><span class=\\\"sr-only\\\">Action</span></button>\\n              <div ngbDropdownMenu>\\n                <a class=\\\"dropdown-item\\\"  [routerLink]=\\\"['/basic/studentview/',item.Id]\\\"><i class=\\\"fas fa-eye\\\"></i>&nbsp;&nbsp;View</a>\\n                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/basic/empedit/',item.EmpId]\\\"><i class=\\\"far fa-edit\\\"></i>&nbsp;&nbsp;Edit</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"javascript:\\\"><i class=\\\"fas fa-door-closed\\\"></i>&nbsp;&nbsp;Fee status</a>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <a class=\\\"dropdown-item\\\" href=\\\"javascript:\\\"><i class=\\\"fas fa-trash-alt\\\"></i>&nbsp;&nbsp;Delete</a>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n      <div *ngIf=\\\"isLoading==false\\\" class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n      \\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n          <pagination class=\\\"pagination-sm\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n            (pageChanged)=\\\"pageChanged($event)\\\" [(ngModel)]=\\\"currentPage\\\"></pagination>\\n        </div>\\n        <div class=\\\"col-lg-4\\\"> \\n        </div> \\n      </div> \\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BasicEmpListComponent } from './basic-Emp-list.component';\r\n  \r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicEmpListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicEmployeeListRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtRW1wLWxpc3QvYmFzaWMtRW1wLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { EmpRegister } from 'src/app/Models/EmpRegister';\nimport { Pagination, PaginatedResult } from 'src/app/Models/Pagination';\nimport { EmployeeService } from 'src/app/services/Employee.service'; \nimport { Session } from 'src/app/Models/Session';\nimport { DashboardService } from 'src/app/services/AdminServices/Dashboard.service';\n\n@Component({\n  selector: 'app-basic-Emp-list',\n  templateUrl: './basic-Emp-list.component.html',\n  styleUrls: ['./basic-Emp-list.component.css']\n})\nexport class BasicEmpListComponent implements OnInit {\n  users: EmpRegister[];\n  user: EmpRegister;\n  pagination: Pagination;\n  userParams: any = {};\n  currentPage:number=1;\n  itemsPerPage:number=5;\n  isLoading:boolean;\n  selected=true;\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  constructor(private _user:EmployeeService) {this.isLoading=true }\n\n  ngOnInit() {\n    this.userParams.AdmissionNo = 'undefined';\n    this.userParams.OrderBy='undefined';\n    this.userParams.Gender = 'undefined';\n    this.loadUsers();\n  }\n  loadUsers() { \n    this._user.getEmpRegistration(parseInt(localStorage.getItem(\"sessionId\")), this.currentPage, this.itemsPerPage, this.userParams)\n      .subscribe((res: PaginatedResult<EmpRegister[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n        this.isLoading = false;\n      }, error => {\n        console.log(error);\n      }); \n  }\n\n  pageChanged(event: any): void {\n    this.isLoading=true;\n    this.currentPage = event.page;\n    this.loadUsers();\n    this.isLoading=false;\n  }\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicEmpListComponent } from './basic-Emp-list.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { BasicEmployeeListRoutingModule } from './basic-Emp-list-routing.module';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { NgbDropdownModule, NgbButtonsModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    BasicEmployeeListRoutingModule,\n    PaginationModule.forRoot(),\n    NgbDropdownModule,\n    NgbButtonsModule,\n    NgbTooltipModule\n  ],\n  declarations: [BasicEmpListComponent]\n})\nexport class BasicEmpListModule { \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http'; \nimport { EmpRegister } from '../Models/EmpRegister';\nimport { PaginatedResult } from '../Models/Pagination';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  baseURL=environment.apiUrl;\n  constructor(private _http:HttpClient) { }\n\n  getEmp(id): Observable<EmpRegister> {\n    return this._http.get<EmpRegister>(this.baseURL + 'Employee/EmpIds/' + id);\n  }\n  getEmpRegistration(sessionId:number,page?, itemsPerPage?, userParams?): Observable<PaginatedResult<EmpRegister[]>> {\n    const paginatedResult: PaginatedResult<EmpRegister[]> = new PaginatedResult<EmpRegister[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n\n    if (userParams != null) { \n      params = params.append('AdmissionNo', userParams.AdmissionNo);\n      params = params.append('OrderBy', userParams.OrderBy);\n      params = params.append('Gender', userParams.Gender);\n    }\n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/'+sessionId, { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getTeacher(){ \n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/') \n  }\n\n  register(empRegister: EmpRegister) { \n  var stringStanders=  empRegister.standers.toString(); \n  empRegister.standers=stringStanders; \n    return this._http.post(this.baseURL + 'Employee/register', empRegister);\n  } \n  updateEmployee(id:number,emp:EmpRegister){\n    return  this._http.put(this.baseURL+'Employee/' + id,emp);\n    }\n    getLastEmpRegisterId(){\n      return this._http.get(this.baseURL+'Employee/' + 'last/');\n    }\n}"],"sourceRoot":"webpack:///","file":"basic-Emp-list-basic-Emp-list-module-es5.js"}