{"version":3,"sources":["src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.component.html","src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister-routing.module.ts","src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.component.css","src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.component.ts","src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<head>\\n  <link href=\\\"https://cdn.syncfusion.com/ej2/material.css\\\" rel=\\\"stylesheet\\\" />\\n</head>\\n<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"registerStudent\\\" (ngSubmit)=\\\"register()\\\"> \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n      \\n        <input formControlName=\\\"firstName\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('firstName').errors && registerStudent.get('firstName').touched}\\\"\\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"First Name\\\">  \\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('firstName').hasError('required') && registerStudent.get('firstName').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('firstName').hasError('minlength') && registerStudent.get('firstName').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid name. Too short</small>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Last Name</label> \\n        <input formControlName=\\\"lastName\\\" type=\\\"text\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('lastName').errors && registerStudent.get('lastName').touched}\\\"\\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Last Name\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('lastName').hasError('required') && registerStudent.get('lastName').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('lastName').hasError('minlength') && registerStudent.get('lastName').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid name. Too short</small>\\n          \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n        <input formControlName=\\\"email\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('email').errors && registerStudent.get('email').touched}\\\"\\n        type=\\\"email\\\" class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Enter email\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('email').hasError('required') && registerStudent.get('email').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('email').hasError('minlength') && registerStudent.get('email').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid email. Too short</small>\\n      \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Gender</label>\\n        <select formControlName=\\\"gender\\\" class=\\\"form-control\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('gender').errors && registerStudent.get('gender').touched}\\\"\\n        id=\\\"exampleFormControlSelect1\\\">\\n          <option [selected]=\\\"selected\\\" disabled>--Select--</option>\\n          <option value=\\\"male\\\">Male</option>\\n          <option value=\\\"female\\\">Female</option>\\n          <option value=\\\"other\\\">Other</option> \\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select gender</small>\\n       </div>\\n    </div>\\n  </div>  \\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Date Of Birth</label>\\n          <input formControlName=\\\"dob\\\" \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('dob').errors && registerStudent.get('dob').touched}\\\"\\n          type=\\\"text\\\" \\n          \\n          class=\\\"form-control\\\" \\n          id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n          name=\\\"dp\\\"\\n          placeholder=\\\"Date of birth\\\" bsDatepicker>\\n \\n\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Mother Tongue</label>\\n          \\n          <input formControlName=\\\"motherTongue\\\"\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('motherTongue').errors && registerStudent.get('motherTongue').touched}\\\"\\n           type=\\\"text\\\" \\n           class=\\\"form-control\\\" \\n           id=\\\"exampleInputEmail1\\\" \\n           aria-describedby=\\\"emailHelp\\\" \\n           placeholder=\\\"Mother tongue\\\">\\n           <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Nationality</label>\\n         \\n          <input \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('nationality').errors && registerStudent.get('nationality').touched}\\\"\\n          formControlName=\\\"nationality\\\" type=\\\"text\\\" \\n          class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Nationality\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter nationality</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Father Name</label>\\n            <input formControlName=\\\"fathername\\\"\\n            [ngClass]=\\\"{'is-invalid': registerStudent.get('fathername').errors && registerStudent.get('fathername').touched}\\\" \\n            type=\\\"fathername\\\" \\n             class=\\\"form-control\\\" \\n             id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n             placeholder=\\\"Father Name\\\">\\n             <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter father name</small>\\n            </div>\\n        </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Phone</label>\\n        <input formControlName=\\\"phone\\\" \\n        (keyup)=\\\"checkAlpha($event)\\\"\\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('phone').errors && registerStudent.get('phone').touched}\\\" \\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Phone\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('required') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Please enter Mobile no</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('minlength') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Enter Number must be 10 digit</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('maxlength') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Enter Number must be 10 digit</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('pattern') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Only digit allow</small>\\n\\n          </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n        <select (change)=\\\"LevelChange($event)\\\" formControlName=\\\"classLevel\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('classLevel').errors && registerStudent.get('classLevel').touched}\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleFormControlSelect1\\\">\\n        <option value=\\\"-1\\\"  [selected]=\\\"selected\\\" disabled>--Select--</option>          \\n           <option value=\\\"1\\\">Junior</option>\\n          <option value=\\\"2\\\">Senior</option>\\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Class level</small>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Assign Class</label> \\n        <ejs-multiselect formControlName=\\\"standers\\\" id='localData' #local [dataSource]='allClasses' [fields]='localFields' [placeholder]='localWaterMark'></ejs-multiselect> \\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select class</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('standers').hasError('defaultSelected') && registerStudent.get('standers').touched\\\" class=\\\"invalid-feedback\\\">Only digit allow</small>\\n \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class Section</label>\\n        <select formControlName=\\\"classsection\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('classsection').errors && registerStudent.get('classsection').touched}\\\" \\n        class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n          <option [selected]=\\\"selected\\\" disabled>--Select--</option>\\n          <option value=\\\"A\\\">A</option>\\n          <option value=\\\"B\\\">B</option> \\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Section</small>\\n      </div>\\n    </div> \\n  </div>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Registration Number</label>\\n          <input formControlName=\\\"RegistrationNo\\\" \\n           type=\\\"text\\\"  \\n          [value]=\\\"RegistrationNo\\\"\\n          readonly\\n          class=\\\"form-control\\\" \\n          id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n          placeholder=\\\"Registration No\\\">\\n         </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Employee Id</label>\\n          <input formControlName=\\\"EmpId\\\" \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('EmpId').errors && registerStudent.get('EmpId').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Emp Id\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter EmpId</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Date Of Registration</label>\\n          <input formControlName=\\\"doa\\\" \\n          [value]=\\\"todaydate\\\"\\n          [bsConfig]=\\\"bsConfig\\\"\\n          bsDatepicker\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('doa').errors && registerStudent.get('doa').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"DOA\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select admission date</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Medium</label>\\n          <input  formControlName=\\\"medium\\\"\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('medium').errors && registerStudent.get('medium').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Medium\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select medium</small> \\n        </div>\\n      </div>\\n    \\n  </div>\\n\\n<hr>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-lg-5\\\">\\n</div>\\n<div class=\\\"col-lg-2\\\">\\n    <button class=\\\"btn btn-primary event-btn m-2\\\" type=\\\"submit\\\" [disabled]=\\\"!registerStudent.valid\\\">\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"load-text\\\"> Loading...</span>\\n        <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Save</span>\\n      </button> \\n</div>\\n<div class=\\\"col-lg-5\\\">\\n \\n</div>\\n  </div> \\n   \\n</form> \\n </div>\\n\\n\\n \\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BasicEmpRegisterComponent } from './basic-EmpRegister.component';\r\nimport { AuthGaurd } from 'src/app/_gaurd/Auth.guard';\r\n  \r\nconst routes: Routes = [\r\n  {\r\n    path: '', \r\n    component: BasicEmpRegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicEmpRegisterRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtRW1wUmVnaXN0ZXIvYmFzaWMtRW1wUmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { EmpRegister } from 'src/app/Models/EmpRegister';\nimport { EmployeeService } from 'src/app/services/Employee.service';\n  \n@Component({\n  selector: 'app-basic-EmpRegister',\n  templateUrl: './basic-EmpRegister.component.html',\n  styleUrls: ['./basic-EmpRegister.component.css']\n})\nexport class BasicEmpRegisterComponent implements OnInit {\n  \n  // maps the local data column to fields property\n  public localFields: Object = { text: 'classes', value: 'classes' };\n    // set the placeholder to MultiSelect Dropdown input element\n  public localWaterMark: string = 'Select Classes';\n  public btnLoader: boolean;\n  registerStudent:FormGroup;\n  selected=true;\n  bsConfig: Partial<BsDatepickerConfig>;\n  classLevels:any;\n  allClasses:any;\n  empRegister:EmpRegister;\n  todaydate:any;\n  RegistrationNo:any;\n  empData:EmpRegister;\n  constructor(private fb:FormBuilder,private _classLevel:ClasslevelService,\n    private _empServices:EmployeeService,\n    private toastr: ToastrService) {\n    this.btnLoader = false;\n   }\n  \n    ngOnInit() { \n      this.bsConfig = {\n        containerClass: 'theme-red'\n      };\n      this.todaydate = new Date();\n      var dd = String(this.todaydate.getDate()).padStart(2, '0');\n      var mm = String(this.todaydate.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = this.todaydate.getFullYear(); \n      this.todaydate = mm + '/' + dd + '/' + yyyy; \n      this.createRegisterForm();\n      this.getLastId();\n    } \n    createRegisterForm(){\n      this.registerStudent=this.fb.group({\n        firstName:['',[Validators.required,Validators.maxLength(12),Validators.minLength(3)]],\n        lastName:['',[Validators.required,Validators.maxLength(12),Validators.minLength(3)]],\n        email:['',[Validators.required,Validators.maxLength(25),Validators.minLength(14)]],\n        gender:['',Validators.required],\n        dob:['',Validators.required],\n        doa:[this.todaydate],\n        motherTongue:['HINDI',Validators.required],\n        nationality:['INDIAN',Validators.required],\n        fathername:['',Validators.required],\n        phone:['',[Validators.required,Validators.minLength(10),Validators.maxLength(10),Validators.pattern('^[0-9]*$')]],\n        classLevel:['',Validators.required],\n        standers:['',Validators.required],\n        classsection:['',Validators.required],\n        RegistrationNo:[this.RegistrationNo],\n        EmpId:['',Validators.required],\n        medium:['ENGLISH',Validators.required],\n      })\n    }\n    getLastId(){\n      this._empServices.getLastEmpRegisterId().subscribe((data:EmpRegister)=>{\n        this.empData=data; \n      if(this.empData==null){ \n        this.RegistrationNo=1;\n      }\n         this.RegistrationNo=data.registrationNo;  \n         \n this.RegistrationNo=parseInt(this.RegistrationNo)+1; \n       })\n    }\n    LevelChange(event){ \n      let Ids=event.target.value;\n      this._classLevel.getClass(Ids).subscribe((data)=>{ \n        this.allClasses=data; \n      })\n    }\n\n    register() {\n      this.btnLoader = true;  \n       if (this.registerStudent.valid) {\n        this.empRegister = Object.assign({}, this.registerStudent.value); \n        this.empRegister.registrationNo=this.RegistrationNo.toString();\n        this._empServices.register(this.empRegister).subscribe(() => {\n          this.toastr.success('Employee Registration Done!', 'Data Saved');\n          this.registerStudent.reset();\n          this.btnLoader = false;\n          this.getLastId();\n          this.createRegisterForm();\n        }, error => {\n          this.toastr.error('Employee Registration Failed!', 'Problem in saving Data',error);\n          this.btnLoader = false;\n        },()=>{ \n        });\n      }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicEmpRegisterComponent } from './basic-EmpRegister.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { BasicEmpRegisterRoutingModule } from './basic-EmpRegister-routing.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n @NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    BsDatepickerModule.forRoot(),\n    ToastrModule.forRoot(),\n    BasicEmpRegisterRoutingModule,\n    MultiSelectAllModule\n  ],\n  declarations: [BasicEmpRegisterComponent]\n})\nexport class BasicEmpRegisterModule { }\n"],"sourceRoot":"webpack:///","file":"basic-EmpRegister-basic-EmpRegister-module-es5.js"}