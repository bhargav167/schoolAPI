{"version":3,"sources":["./src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.component.html","./src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister-routing.module.ts","./src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.component.css","./src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.component.ts","./src/app/demo/ui-elements/ui-basic/basic-EmpRegister/basic-EmpRegister.module.ts"],"names":[],"mappings":"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","file":"basic-EmpRegister-basic-EmpRegister-module-es2015.js","sourcesContent":["export default \"<head>\\n  <link href=\\\"https://cdn.syncfusion.com/ej2/material.css\\\" rel=\\\"stylesheet\\\" />\\n</head>\\n<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"registerStudent\\\" (ngSubmit)=\\\"register()\\\"> \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n      \\n        <input formControlName=\\\"firstName\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('firstName').errors && registerStudent.get('firstName').touched}\\\"\\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"First Name\\\">  \\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('firstName').hasError('required') && registerStudent.get('firstName').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('firstName').hasError('minlength') && registerStudent.get('firstName').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid name. Too short</small>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Last Name</label> \\n        <input formControlName=\\\"lastName\\\" type=\\\"text\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('lastName').errors && registerStudent.get('lastName').touched}\\\"\\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Last Name\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('lastName').hasError('required') && registerStudent.get('lastName').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('lastName').hasError('minlength') && registerStudent.get('lastName').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid name. Too short</small>\\n          \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n        <input formControlName=\\\"email\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('email').errors && registerStudent.get('email').touched}\\\"\\n        type=\\\"email\\\" class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Enter email\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('email').hasError('required') && registerStudent.get('email').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('email').hasError('minlength') && registerStudent.get('email').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid email. Too short</small>\\n      \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Gender</label>\\n        <select formControlName=\\\"gender\\\" class=\\\"form-control\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('gender').errors && registerStudent.get('gender').touched}\\\"\\n        id=\\\"exampleFormControlSelect1\\\">\\n          <option [selected]=\\\"selected\\\" disabled>--Select--</option>\\n          <option value=\\\"male\\\">Male</option>\\n          <option value=\\\"female\\\">Female</option>\\n          <option value=\\\"other\\\">Other</option> \\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select gender</small>\\n       </div>\\n    </div>\\n  </div>  \\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Date Of Birth</label>\\n          <input formControlName=\\\"dob\\\" \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('dob').errors && registerStudent.get('dob').touched}\\\"\\n          type=\\\"text\\\" \\n          \\n          class=\\\"form-control\\\" \\n          id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n          name=\\\"dp\\\"\\n          placeholder=\\\"Date of birth\\\" bsDatepicker>\\n \\n\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Mother Tongue</label>\\n          \\n          <input formControlName=\\\"motherTongue\\\"\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('motherTongue').errors && registerStudent.get('motherTongue').touched}\\\"\\n           type=\\\"text\\\" \\n           class=\\\"form-control\\\" \\n           id=\\\"exampleInputEmail1\\\" \\n           aria-describedby=\\\"emailHelp\\\" \\n           placeholder=\\\"Mother tongue\\\">\\n           <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Nationality</label>\\n         \\n          <input \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('nationality').errors && registerStudent.get('nationality').touched}\\\"\\n          formControlName=\\\"nationality\\\" type=\\\"text\\\" \\n          class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Nationality\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter nationality</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Father Name</label>\\n            <input formControlName=\\\"fathername\\\"\\n            [ngClass]=\\\"{'is-invalid': registerStudent.get('fathername').errors && registerStudent.get('fathername').touched}\\\" \\n            type=\\\"fathername\\\" \\n             class=\\\"form-control\\\" \\n             id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n             placeholder=\\\"Father Name\\\">\\n             <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter father name</small>\\n            </div>\\n        </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Phone</label>\\n        <input formControlName=\\\"phone\\\" \\n        (keyup)=\\\"checkAlpha($event)\\\"\\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('phone').errors && registerStudent.get('phone').touched}\\\" \\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Phone\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('required') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Please enter Mobile no</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('minlength') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Enter Number must be 10 digit</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('maxlength') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Enter Number must be 10 digit</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('pattern') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Only digit allow</small>\\n\\n          </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n        <select (change)=\\\"LevelChange($event)\\\" formControlName=\\\"classLevel\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('classLevel').errors && registerStudent.get('classLevel').touched}\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleFormControlSelect1\\\">\\n        <option value=\\\"-1\\\"  [selected]=\\\"selected\\\" disabled>--Select--</option>          \\n           <option value=\\\"1\\\">Junior</option>\\n          <option value=\\\"2\\\">Senior</option>\\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Class level</small>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Assign Class</label> \\n        <ejs-multiselect formControlName=\\\"standers\\\" id='localData' #local [dataSource]='allClasses' [fields]='localFields' [placeholder]='localWaterMark'></ejs-multiselect> \\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select class</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('standers').hasError('defaultSelected') && registerStudent.get('standers').touched\\\" class=\\\"invalid-feedback\\\">Only digit allow</small>\\n \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class Section</label>\\n        <select formControlName=\\\"classsection\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('classsection').errors && registerStudent.get('classsection').touched}\\\" \\n        class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n          <option [selected]=\\\"selected\\\" disabled>--Select--</option>\\n          <option value=\\\"A\\\">A</option>\\n          <option value=\\\"B\\\">B</option> \\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Section</small>\\n      </div>\\n    </div> \\n  </div>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Registration Number</label>\\n          <input formControlName=\\\"RegistrationNo\\\" \\n           type=\\\"text\\\"  \\n          [value]=\\\"RegistrationNo\\\"\\n          readonly\\n          class=\\\"form-control\\\" \\n          id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n          placeholder=\\\"Registration No\\\">\\n         </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Employee Id</label>\\n          <input formControlName=\\\"EmpId\\\" \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('EmpId').errors && registerStudent.get('EmpId').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Emp Id\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter EmpId</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Date Of Registration</label>\\n          <input formControlName=\\\"doa\\\" \\n          [value]=\\\"todaydate\\\"\\n          [bsConfig]=\\\"bsConfig\\\"\\n          bsDatepicker\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('doa').errors && registerStudent.get('doa').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"DOA\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select admission date</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Medium</label>\\n          <input  formControlName=\\\"medium\\\"\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('medium').errors && registerStudent.get('medium').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Medium\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select medium</small> \\n        </div>\\n      </div>\\n    \\n  </div>\\n\\n<hr>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-lg-5\\\">\\n</div>\\n<div class=\\\"col-lg-2\\\">\\n    <button class=\\\"btn btn-primary event-btn m-2\\\" type=\\\"submit\\\" [disabled]=\\\"!registerStudent.valid\\\">\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"load-text\\\"> Loading...</span>\\n        <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Save</span>\\n      </button> \\n</div>\\n<div class=\\\"col-lg-5\\\">\\n \\n</div>\\n  </div> \\n   \\n</form> \\n </div>\\n\\n\\n \\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BasicEmpRegisterComponent } from './basic-EmpRegister.component';\r\nimport { AuthGaurd } from 'src/app/_gaurd/Auth.guard';\r\n  \r\nconst routes: Routes = [\r\n  {\r\n    path: '', \r\n    component: BasicEmpRegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicEmpRegisterRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtRW1wUmVnaXN0ZXIvYmFzaWMtRW1wUmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { EmpRegister } from 'src/app/Models/EmpRegister';\nimport { EmployeeService } from 'src/app/services/Employee.service';\n  \n@Component({\n  selector: 'app-basic-EmpRegister',\n  templateUrl: './basic-EmpRegister.component.html',\n  styleUrls: ['./basic-EmpRegister.component.css']\n})\nexport class BasicEmpRegisterComponent implements OnInit {\n  \n  // maps the local data column to fields property\n  public localFields: Object = { text: 'classes', value: 'classes' };\n    // set the placeholder to MultiSelect Dropdown input element\n  public localWaterMark: string = 'Select Classes';\n  public btnLoader: boolean;\n  registerStudent:FormGroup;\n  selected=true;\n  bsConfig: Partial<BsDatepickerConfig>;\n  classLevels:any;\n  allClasses:any;\n  empRegister:EmpRegister;\n  todaydate:any;\n  RegistrationNo:any;\n  empData:EmpRegister;\n  constructor(private fb:FormBuilder,private _classLevel:ClasslevelService,\n    private _empServices:EmployeeService,\n    private toastr: ToastrService) {\n    this.btnLoader = false;\n   }\n  \n    ngOnInit() { \n      this.bsConfig = {\n        containerClass: 'theme-red'\n      };\n      this.todaydate = new Date();\n      var dd = String(this.todaydate.getDate()).padStart(2, '0');\n      var mm = String(this.todaydate.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = this.todaydate.getFullYear(); \n      this.todaydate = mm + '/' + dd + '/' + yyyy; \n      this.createRegisterForm();\n      this.getLastId();\n    } \n    createRegisterForm(){\n      this.registerStudent=this.fb.group({\n        firstName:['',[Validators.required,Validators.maxLength(12),Validators.minLength(3)]],\n        lastName:['',[Validators.required,Validators.maxLength(12),Validators.minLength(3)]],\n        email:['',[Validators.required,Validators.maxLength(25),Validators.minLength(14)]],\n        gender:['',Validators.required],\n        dob:['',Validators.required],\n        doa:[this.todaydate],\n        motherTongue:['HINDI',Validators.required],\n        nationality:['INDIAN',Validators.required],\n        fathername:['',Validators.required],\n        phone:['',[Validators.required,Validators.minLength(10),Validators.maxLength(10),Validators.pattern('^[0-9]*$')]],\n        classLevel:['',Validators.required],\n        standers:['',Validators.required],\n        classsection:['',Validators.required],\n        RegistrationNo:[this.RegistrationNo],\n        EmpId:['',Validators.required],\n        medium:['ENGLISH',Validators.required],\n      })\n    }\n    getLastId(){\n      this._empServices.getLastEmpRegisterId().subscribe((data:EmpRegister)=>{\n        this.empData=data; \n      if(this.empData==null){ \n        this.RegistrationNo=1;\n      }\n         this.RegistrationNo=data.registrationNo;  \n         \n this.RegistrationNo=parseInt(this.RegistrationNo)+1; \n       })\n    }\n    LevelChange(event){ \n      let Ids=event.target.value;\n      this._classLevel.getClass(Ids).subscribe((data)=>{ \n        this.allClasses=data; \n      })\n    }\n\n    register() {\n      this.btnLoader = true;  \n       if (this.registerStudent.valid) {\n        this.empRegister = Object.assign({}, this.registerStudent.value); \n        this.empRegister.registrationNo=this.RegistrationNo.toString();\n        this._empServices.register(this.empRegister).subscribe(() => {\n          this.toastr.success('Employee Registration Done!', 'Data Saved');\n          this.registerStudent.reset();\n          this.btnLoader = false;\n          this.getLastId();\n          this.createRegisterForm();\n        }, error => {\n          this.toastr.error('Employee Registration Failed!', 'Problem in saving Data',error);\n          this.btnLoader = false;\n        },()=>{ \n        });\n      }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicEmpRegisterComponent } from './basic-EmpRegister.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { BasicEmpRegisterRoutingModule } from './basic-EmpRegister-routing.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n @NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    BsDatepickerModule.forRoot(),\n    ToastrModule.forRoot(),\n    BasicEmpRegisterRoutingModule,\n    MultiSelectAllModule\n  ],\n  declarations: [BasicEmpRegisterComponent]\n})\nexport class BasicEmpRegisterModule { }\n"],"sourceRoot":"webpack:///"}