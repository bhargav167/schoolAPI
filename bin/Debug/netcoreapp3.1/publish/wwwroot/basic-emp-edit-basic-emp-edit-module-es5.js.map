{"version":3,"sources":["src/app/demo/ui-elements/ui-basic/basic-emp-edit/basic-emp-edit.component.html","src/app/demo/ui-elements/ui-basic/basic-emp-edit/basic-emp-edit-routing.module.ts","src/app/demo/ui-elements/ui-basic/basic-emp-edit/basic-emp-edit.component.css","src/app/demo/ui-elements/ui-basic/basic-emp-edit/basic-emp-edit.component.ts","src/app/demo/ui-elements/ui-basic/basic-emp-edit/basic-emp-edit.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \" \\n      <div class=\\\"page-header\\\">\\n        <div class=\\\"page-block\\\">\\n          <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"page-header-title\\\">\\n                <ng-container><h5 class=\\\"m-b-10\\\">Edit</h5></ng-container>\\n              </div>\\n              <ul class=\\\"breadcrumb\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                  <a [routerLink]=\\\"['/dashboard/analytics/']\\\" ><i class=\\\"feather icon-home\\\"></i></a>\\n                 </li> \\n                 <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/basic/emplist/']\\\">Employee</a></li>\\n                   <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard/analytics/']\\\">Edit</a></li> \\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div> \\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\"> \\n      <app-card [hidHeader]=\\\"true\\\" cardClass=\\\"tab-card\\\">\\n       \\n        <ngb-tabset>\\n\\n          <ngb-tab title=\\\"Student Detail's\\\">\\n            <ng-template ngbTabContent>\\n              <h4>Employee Information</h4>\\n              <form #studentForm=\\\"ngForm\\\"  id=\\\"quick\\\" (ngSubmit)=\\\"studentForm.form.valid && updateEmployee()\\\" novalidate> \\n              <div class=\\\"container\\\">\\n                  <div *ngIf=\\\"studentForm.dirty\\\" class=\\\"alert alert-info\\\">\\n                      <span>\\n                        <b> Information: </b> You have made changes. Any unsave change will be lost!\\\"</span>\\n                    </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n                      <input name=\\\"firstName\\\" [(ngModel)]=\\\"Employee.firstName\\\" \\n                      #firstName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && firstName.invalid }\\\" required\\n                       type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"First Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && firstName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"firstName.errors.required\\\">First Name is required</div>\\n                        </div>\\n                     </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Last Name</label>\\n                      <input name=\\\"lastName\\\" \\n                      #lastName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && lastName.invalid }\\\" required\\n                      [(ngModel)]=\\\"Employee.lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Last Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && lastName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"lastName.errors.required\\\">Last Name is required</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n                      <input name=\\\"email\\\" [(ngModel)]=\\\"Employee.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"First Name\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Father Name</label>\\n                      <input name=\\\"fatherName\\\" [(ngModel)]=\\\"Employee.fatherName\\\" \\n                      #fatherName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && fatherName.invalid }\\\" required\\n                      type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Father Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && fatherName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fatherName.errors.required\\\">Last Name is required</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                </div> \\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Gender</label>\\n                      <select name=\\\"gender\\\" [(ngModel)]=\\\"Employee.gender\\\" class=\\\"form-control\\\"\\n                        id=\\\"exampleFormControlSelect1\\\">\\n                        <option [selected]=\\\"selected\\\" [value]=\\\"Employee.gender\\\">{{Employee.gender}}</option>\\n                        <option value=\\\"male\\\" *ngIf=\\\"Employee.gender=='female'\\\">Male</option>\\n                        <option value=\\\"other\\\" *ngIf=\\\"Employee.gender=='female'\\\">Other</option>\\n                        <option value=\\\"female\\\" *ngIf=\\\"Employee.gender=='male'\\\">Female</option>\\n                        <option value=\\\"other\\\" *ngIf=\\\"Employee.gender=='male'\\\">Other</option>\\n                        <option value=\\\"male\\\" *ngIf=\\\"Employee.gender=='other'\\\">Male</option>\\n                        <option value=\\\"female\\\" *ngIf=\\\"Employee.gender=='other'\\\">Female</option>\\n                      </select>\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select gender</small>\\n                    </div>\\n                  </div>\\n              \\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n                      <select name=\\\"classLevel\\\" [(ngModel)]=\\\"Employee.classLevel\\\" (change)=\\\"LevelChange($event)\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option value=\\\"1\\\" *ngIf=\\\"clasLevel=='Junior'\\\">Junior</option>\\n                        <option value=\\\"2\\\" *ngIf=\\\"clasLevel=='Senior'\\\">Senior</option>\\n              \\n                        <option value=\\\"1\\\" *ngIf=\\\"clasLevel!='Junior'\\\">Junior</option>\\n                        <option value=\\\"2\\\" *ngIf=\\\"clasLevel!='Senior'\\\">Senior</option>\\n                      </select>\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Class level</small>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Class</label>\\n                      <ejs-multiselect [(ngModel)]=\\\"Employee.standers\\\" \\n                       id='localData' #local [dataSource]='allClasses' \\n                       [fields]='localFields' [placeholder]='localWaterMark'></ejs-multiselect> \\n                       <div *ngIf=\\\"studentForm.submitted && standers.invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"standers.errors.required\\\">Please Select Registration Number</div>\\n                    </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Section</label>\\n                      <select  name=\\\"classsection\\\" [(ngModel)]=\\\"Employee.classsection\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option selected=\\\"selected\\\" >{{Employee.classsection | uppercase}}</option>\\n                        <option *ngIf=\\\"Employee.classsection=='A'\\\">B</option>\\n                        <option *ngIf=\\\"Employee.classsection=='A'\\\">C</option>\\n                        <option *ngIf=\\\"Employee.classsection=='B'\\\">A</option>\\n                        <option *ngIf=\\\"Employee.classsection=='B'\\\">C</option>\\n                        <option *ngIf=\\\"Employee.classsection=='C'\\\">A</option>\\n                        <option *ngIf=\\\"Employee.classsection=='C'\\\">B</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div> \\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Registration Number</label>\\n                      <input name=\\\"RegistrationNo\\\" disabled=\\\"disabled\\\" type=\\\"number\\\" class=\\\"form-control\\\" \\n                      #RegistrationNo=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && admissionno.invalid }\\\" required\\n                      [(ngModel)]=\\\"Employee.RegistrationNo\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Admission no\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && RegistrationNo.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"RegistrationNo.errors.required\\\">Please enter Registration Number</div>\\n                        </div>\\n                  \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Employee Id</label>\\n                      <input required name=\\\"EmpId\\\" \\n                      #EmpId=\\\"ngModel\\\"\\n                      disabled=\\\"disabled\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && rollNo.invalid }\\\" required\\n                      [(ngModel)]=\\\"Employee.EmpId\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Roll no\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && EmpId.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"EmpId.errors.required\\\">Please enter Employee Id</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Date Of Addmission</label>\\n                      <input name=\\\"doa\\\" readonly [(ngModel)]=\\\"Employee.doa\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                     \\n                      aria-describedby=\\\"emailHelp\\\" placeholder=\\\"DOA\\\">\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select admission date</small>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Medium</label>\\n                      <input name=\\\"medium\\\" \\n                      #medium=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && medium.invalid }\\\" required\\n                      [(ngModel)]=\\\"Employee.medium\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Medium\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && medium.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"medium.errors.required\\\">Please select medium</div>\\n                        </div> \\n                    </div>\\n                  </div> \\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"exampleInputEmail1\\\">Phone</label>\\n                        <input name=\\\"phone\\\" \\n                        #phone=\\\"ngModel\\\"\\n                        minlength=\\\"10\\\"\\n                        maxlength=\\\"10\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && phone.invalid }\\\" required\\n                        [(ngModel)]=\\\"Employee.phone\\\" (keyup)=\\\"checkAlpha($event)\\\" type=\\\"text\\\"\\n                          class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Phone\\\">\\n                          <div *ngIf=\\\"studentForm.submitted && phone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <div *ngIf=\\\"phone.errors.required\\\">Please Enter Phone number</div>\\n                              <div *ngIf=\\\"phone.errors.minlength\\\">Please Enter Valid number</div>\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Nationality</label> \\n                            <input name=\\\"nationality\\\"  \\n                            #nationality=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && nationality.invalid }\\\" required\\n                            [(ngModel)]=\\\"Employee.Nationality\\\"\\n                             type=\\\"text\\\" \\n                            class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Nationality\\\">\\n                            <div *ngIf=\\\"studentForm.submitted && nationality.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"nationality.errors.required\\\">Please enter nationality</div>\\n                            </div>\\n                            \\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Mother Tongue</label> \\n                            <input name=\\\"motherTongue\\\" [(ngModel)]=\\\"Employee.motherTongue\\\"\\n                           type=\\\"text\\\" \\n                             class=\\\"form-control\\\" \\n                             id=\\\"exampleInputEmail1\\\" \\n                             aria-describedby=\\\"emailHelp\\\" \\n                             placeholder=\\\"Mother tongue\\\">\\n                             <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Date Of Birth</label>\\n                            <input name=\\\"dob\\\" [(ngModel)]=\\\"Employee.dob\\\" readonly\\n                            type=\\\"text\\\"  \\n                            class=\\\"form-control\\\" \\n                            id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\"  \\n                            placeholder=\\\"Date of birth\\\"> \\n                            <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n                          </div>\\n                    </div>\\n                  \\n                  </div>\\n\\n                  <hr>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-lg-5\\\">\\n</div>\\n<div class=\\\"col-lg-2\\\">\\n    <button [disabled]=\\\"!studentForm.dirty\\\" form=\\\"quick\\\" type=\\\"submit\\\" class=\\\"btn btn-primary event-btn m-2\\\">\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"load-text\\\"> Loading...</span>\\n        <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Submit</span>\\n      </button>\\n \\n</div>\\n<div class=\\\"col-lg-5\\\">\\n \\n</div>\\n  </div> \\n              </div>\\n            </form>\\n            </ng-template>\\n          </ngb-tab>\\n\\n       \\n        </ngb-tabset>\\n      </app-card>\\n    </div>\\n  </div>\\n  \"","import { Routes, RouterModule } from '@angular/router';\r\n import { NgModule } from '@angular/core';\r\nimport { BasicEmpEditComponent } from './basic-emp-edit.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '', \r\n    component: BasicEmpEditComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n \r\nexport class BasicEmpEditRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtZW1wLWVkaXQvYmFzaWMtZW1wLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { EmpRegister } from 'src/app/Models/EmpRegister';\nimport { NgForm, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { EmployeeService } from 'src/app/services/Employee.service';\nimport { DropDownList } from '@syncfusion/ej2-angular-dropdowns';\nimport { DataManager,Query } from '@syncfusion/ej2-data';\n \n@Component({\n  selector: 'app-basic-emp-edit',\n  templateUrl: './basic-emp-edit.component.html',\n  styleUrls: ['./basic-emp-edit.component.css']\n})\nexport class BasicEmpEditComponent implements OnInit {\n  Employee:EmpRegister; \n  gender:string;\n  clasLevel:string;\n  selected=true; \n  classLevels:any;\n  allClasses:any;\n  isChange:boolean=false;\n  public btnLoader: boolean;\n  public btnLoader1: boolean; \n  \n  public progress: number;\n  public message: string;\n  public localFields: Object = { text: 'classes', value: 'classes' };\n  // set the placeholder to MultiSelect Dropdown input element\n  public localWaterMark: string = 'Select Classes';\n  @Output() public onUploadFinished = new EventEmitter();\n  \n  \n  @ViewChild('studentForm', {static: true}) studentForm: NgForm;\n  @ViewChild('eduForm', {static: true}) eduForm: NgForm;\n  constructor(private http: HttpClient,\n    private _route:ActivatedRoute,\n    private _empServices:EmployeeService, \n    private fb:FormBuilder,\n    private _classLevel:ClasslevelService,\n    private toastr: ToastrService) { \n    this.btnLoader1 = false;\n    this.btnLoader = false;}\n\n  ngOnInit() { \n    this._empServices.getEmp(+this._route.snapshot.params['id']).subscribe((user: EmpRegister) => { \n      this.Employee = user; \n      console.log(this.Employee); \n      this.AssignSelectedDropDown(); \n      this.LevelChangeOnLoad(+this.Employee.classLevel);  \n    }, error => {\n    }) \n  }\n  AssignSelectedDropDown(){ \n    if (this.Employee.classLevel == '1') {\n      this.clasLevel = 'Junior';\n    }\n    if (this.Employee.classLevel == '2') {\n      this.clasLevel = 'Senior';\n    } \n    if (this.Employee.gender == \"1\") {\n      this.gender = 'Male'\n    }\n    if (this.Employee.gender == \"2\") {\n      this.gender = 'Female'\n    }\n    if (this.Employee.gender == \"3\") {\n      this.gender = 'Other'\n    }\n  }\n  LevelChangeOnLoad(id:number){  \n    this._classLevel.getClass(id).subscribe((data)=>{ \n      this.allClasses=data; \n    })\n  }\n  LevelChange(event){ \n    let Ids=event.target.value;\n    this._classLevel.getClass(Ids).subscribe((data)=>{ \n      this.allClasses=data; \n    })\n  }\n  updateEmployee(){  \n    this.btnLoader = true;\n    this._empServices.updateEmployee(this.Employee.EmpId,this.Employee).subscribe(next=>{\n      this.toastr.success('Employee Details Updated!', 'Data Saved');\n      this.btnLoader = false;\n     this.studentForm.reset(this.Employee); \n    },error=>{ \n      this.toastr.error('Error in updating!', 'Failed');\n      this.btnLoader = false;\n    })\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicEmpEditComponent } from './basic-emp-edit.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { BasicEmpEditRoutingModule } from './basic-emp-edit-routing.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MultiSelectAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    BasicEmpEditRoutingModule,\n    BsDatepickerModule.forRoot(),\n    NgbTabsetModule,\n    ToastrModule.forRoot(),\n    MultiSelectAllModule\n  ],\n  declarations: [BasicEmpEditComponent]\n})\nexport class BasicEmpEditModule { }\n"],"sourceRoot":"webpack:///","file":"basic-emp-edit-basic-emp-edit-module-es5.js"}