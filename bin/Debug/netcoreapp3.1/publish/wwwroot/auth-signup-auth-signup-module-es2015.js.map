{"version":3,"sources":["./src/app/demo/pages/authentication/auth-signup/auth-signup.component.html","./src/app/demo/pages/authentication/auth-signup/auth-signup-routing.module.ts","./src/app/demo/pages/authentication/auth-signup/auth-signup.component.scss","./src/app/demo/pages/authentication/auth-signup/auth-signup.component.ts","./src/app/demo/pages/authentication/auth-signup/auth-signup.module.ts"],"names":[],"mappings":"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","file":"auth-signup-auth-signup-module-es2015.js","sourcesContent":["export default \"<div class=\\\"auth-wrapper\\\">\\n  <div class=\\\"auth-content\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"row align-items-center text-center\\\">\\n        <form [formGroup]=\\\"formModel\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"register()\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card-body\\\">\\n              <img src=\\\"assets/images/logo-dark.png\\\" alt=\\\"\\\" class=\\\"img-fluid mb-4\\\">\\n              <h4 class=\\\"mb-3 f-w-400\\\">Sign up</h4>\\n            \\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"feather icon-user\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"FullName\\\"\\n                [ngClass]=\\\"{'is-invalid': formModel.get('FullName').errors && formModel.get('FullName').touched}\\\"\\n                placeholder=\\\"FullName\\\">\\n                <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('FullName').hasError('required') && formModel.get('FullName').touched\\\" class=\\\"invalid-feedback\\\">Please enter Full Name</small>\\n               </div>\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"feather icon-user\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"UserName\\\"\\n                [ngClass]=\\\"{'is-invalid': formModel.get('UserName').errors && formModel.get('UserName').touched}\\\"\\n                placeholder=\\\"Username\\\">\\n                <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('UserName').hasError('required') && formModel.get('UserName').touched\\\" class=\\\"invalid-feedback\\\">Please enter User Name</small>\\n              </div>\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"feather icon-mail\\\"></i></span>\\n                </div>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"Email\\\"\\n                [ngClass]=\\\"{'is-invalid': formModel.get('Email').errors && formModel.get('Email').touched}\\\"\\n                placeholder=\\\"Email address\\\">\\n                <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('Email').hasError('required') && formModel.get('Email').touched\\\" class=\\\"invalid-feedback\\\">Please enter Email</small>\\n              </div>\\n\\n            \\n                <div class=\\\"input-group mb-4\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"feather icon-lock\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\"\\n                  [ngClass]=\\\"{'is-invalid': formModel.get('Password').errors && formModel.get('Password').touched}\\\"\\n                  placeholder=\\\"Password\\\">\\n                  <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('Password').hasError('required') && formModel.get('Password').touched\\\" class=\\\"invalid-feedback\\\">Please enter Password</small>\\n                </div>\\n                <div class=\\\"input-group mb-4\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"feather icon-lock\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\" \\n                  [ngClass]=\\\"{'is-invalid': formModel.get('ConfirmPassword').errors && formModel.get('ConfirmPassword').touched}\\\"\\n                  placeholder=\\\"Confirm Password\\\">\\n                  <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('ConfirmPassword').hasError('required') && formModel.get('ConfirmPassword').touched\\\" class=\\\"invalid-feedback\\\">Please enter Confirm Password</small>\\n                </div> \\n              \\n              <div class=\\\"form-group text-left mt-2\\\">\\n                <div class=\\\"checkbox checkbox-primary d-inline\\\">\\n                  <input type=\\\"checkbox\\\" name=\\\"checkbox-fill-2\\\" id=\\\"checkbox-fill-2\\\">\\n                  <label for=\\\"checkbox-fill-2\\\" class=\\\"cr\\\">Send me the <a href=\\\"javascript:\\\"> Newsletter</a> weekly.</label>\\n                </div>\\n              </div>\\n              <button type=\\\"submit\\\" [disabled]=\\\"!formModel.valid\\\" class=\\\"btn btn-primary btn-block mb-4\\\">Sign up</button>\\n              <p class=\\\"mb-2\\\">Already have an account? <a [routerLink]=\\\"['/auth/signin']\\\" class=\\\"f-w-400\\\">Signin</a></p>\\n            </div>\\n          </div>\\n        </form> \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthSignupComponent} from './auth-signup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthSignupComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthSignupRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcGFnZXMvYXV0aGVudGljYXRpb24vYXV0aC1zaWdudXAvYXV0aC1zaWdudXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthRegister } from 'src/app/Models/AuthRegister';\nimport { AuthService } from 'src/app/services/AuthServices/Auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-auth-signup',\n  templateUrl: './auth-signup.component.html',\n  styleUrls: ['./auth-signup.component.scss']\n})\nexport class AuthSignupComponent implements OnInit {\n  public btnLoader: boolean;\n  formModel:FormGroup;\n  authRegister:AuthRegister;\n  role:string='Admin';\n  constructor(private fb:FormBuilder,private _authServices:AuthService,private toastr: ToastrService) { }\n\n  createPost(){\n    this.formModel =this.fb.group({\n      UserName:['',Validators.required],\n      Email:['',Validators.required],\n      FullName:['',Validators.required],\n      Password:['',Validators.required],\n      ConfirmPassword:['',Validators.required] \n    }) \n  }\n\n  ngOnInit() {\n    this.createPost();\n  }\n\n  register() {\n    this.btnLoader = true;  \n     if (this.formModel.valid) {\n      this.authRegister = Object.assign({}, this.formModel.value);  \n      this._authServices.register(this.authRegister,this.role).subscribe(() => {\n        this.toastr.success('Registration Done!', 'Data Saved');\n        this.formModel.reset();\n        this.btnLoader = false;\n        this.createPost();\n      }, error => {\n        this.toastr.error('Registration Failed!', 'Problem in saving Data',error);\n        this.btnLoader = false;\n      },()=>{ \n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthSignupRoutingModule } from './auth-signup-routing.module';\nimport { AuthSignupComponent } from './auth-signup.component'; \nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGaurd } from 'src/app/_gaurd/Auth.guard';\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    AuthSignupRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  declarations: [AuthSignupComponent]\n})\nexport class AuthSignupModule { }\n"],"sourceRoot":"webpack:///"}