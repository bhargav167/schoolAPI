{"version":3,"sources":["./src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.component.html","./src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list-routing.module.ts","./src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.component.css","./src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.component.ts","./src/app/demo/ui-elements/ui-basic/basic-Emp-list/basic-Emp-list.module.ts","./src/app/services/Employee.service.ts"],"names":[],"mappings":"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","file":"basic-Emp-list-basic-Emp-list-module-es2015.js","sourcesContent":["export default \"\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-8\\\"> \\n        <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n            <div class=\\\"form-group px-2\\\">\\n                <label class=\\\"label\\\" for=\\\"gender\\\">Gender: </label>\\n                <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\"\\n                  [(ngModel)]=\\\"userParams.Gender\\\" name=\\\"Gender\\\"> \\n                  <option [selected]=\\\"selected\\\" disabled>--Select--</option>\\n                  <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n                    {{gender.display}}\\n                  </option>\\n                </select>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"minAge\\\">Employee Id</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 85px\\\" id=\\\"admi\\\"\\n                    [(ngModel)]=\\\"userParams.AdmissionNo\\\" name=\\\"AdmissionNo\\\">\\n                </div>\\n\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">\\n                  Reset Filter\\n              </button>\\n        </form>\\n    </div>\\n    <div class=\\\"col-lg-4\\\"> \\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n            btnRadio=\\\"OrderBy\\\" value=\\\"OrderBy\\\" name=\\\"OrderBy\\\" [(ngModel)]=\\\"userParams.OrderBy\\\" (click)=\\\"loadUsers()\\\">Order by Class</button>\\n         &nbsp;\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\"\\n            btnRadio=\\\"OrderBy\\\" value=\\\"OrderBy\\\" name=\\\"created\\\" [(ngModel)]=\\\"userParams.OrderBy\\\" (click)=\\\"loadUsers()\\\">Newest Registration</button>    \\n          </div> \\n  </div>\\n<hr>\\n<div class=\\\"col-md-12\\\"> \\n    <div *ngIf=\\\"isLoading==true\\\" class=\\\"d-flex justify-content-start center\\\">\\n        <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </div>\\n      <table *ngIf=\\\"isLoading==false\\\" class=\\\"table table-hover m-b-0\\\">\\n        <thead>\\n          <tr> \\n            <th>\\n              <span>Registration No\\n                <a class=\\\"help\\\"><i class=\\\"fa fa-sort-numeric-up\\\"></i></a>\\n              </span>\\n            </th>\\n            <th>\\n              <span>Employee Id\\n                <a class=\\\"help\\\"><i class=\\\"fa fa-sort-numeric-up\\\"></i></a>\\n              </span>\\n            </th>\\n            <th>\\n              <span>Name\\n                <a class=\\\"help\\\"><i class=\\\"fa fa-user\\\"></i></a>\\n              </span>\\n            </th> \\n            <th>\\n              <span>Class\\n                <a class=\\\"help\\\"><i class=\\\"fab fa-cuttlefish\\\"></i></a>\\n              </span>\\n            </th>\\n            <th>\\n            \\n              <span>Section\\n                <a class=\\\"help\\\"><i class=\\\"fas fa-chalkboard\\\"></i></a>\\n              </span>\\n            </th>\\n                      <th>\\n                          <span>Gender\\n                            <a class=\\\"help\\\"><i class=\\\"fa fa-transgender\\\"></i></a>\\n                          </span>\\n                        </th>\\n                        <th>\\n                          <span>Action\\n                            <a class=\\\"help\\\"><i class=\\\"fa fa-mouse\\\"></i></a>\\n                          </span>\\n                        </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let item of users\\\">\\n          <td>{{item.RegistrationNo}}</td> \\n          <td>{{item.EmpId}}</td> \\n          <td>{{item.firstName}} {{item.lastName}}</td> \\n          <td>{{item.standers}}</td> \\n          <td>{{item.classsection | uppercase}}</td>  \\n          <td *ngIf=\\\"item.gender=='male'\\\">Male</td> \\n          <td *ngIf=\\\"item.gender=='female'\\\">Female</td> \\n          <td *ngIf=\\\"item.gender=='other'\\\">Other</td>\\n          <td> \\n            <div class=\\\"btn-group mb-2 mr-2\\\" ngbDropdown [placement]=\\\"'bottom-right'\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\">Action</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle-split\\\" ngbDropdownToggle><span class=\\\"sr-only\\\">Action</span></button>\\n              <div ngbDropdownMenu>\\n                <a class=\\\"dropdown-item\\\"  [routerLink]=\\\"['/basic/studentview/',item.Id]\\\"><i class=\\\"fas fa-eye\\\"></i>&nbsp;&nbsp;View</a>\\n                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/basic/empedit/',item.EmpId]\\\"><i class=\\\"far fa-edit\\\"></i>&nbsp;&nbsp;Edit</a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"javascript:\\\"><i class=\\\"fas fa-door-closed\\\"></i>&nbsp;&nbsp;Fee status</a>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <a class=\\\"dropdown-item\\\" href=\\\"javascript:\\\"><i class=\\\"fas fa-trash-alt\\\"></i>&nbsp;&nbsp;Delete</a>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n      <div *ngIf=\\\"isLoading==false\\\" class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n      \\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n          <pagination class=\\\"pagination-sm\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n            (pageChanged)=\\\"pageChanged($event)\\\" [(ngModel)]=\\\"currentPage\\\"></pagination>\\n        </div>\\n        <div class=\\\"col-lg-4\\\"> \\n        </div> \\n      </div> \\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BasicEmpListComponent } from './basic-Emp-list.component';\r\n  \r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicEmpListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicEmployeeListRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtRW1wLWxpc3QvYmFzaWMtRW1wLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { EmpRegister } from 'src/app/Models/EmpRegister';\nimport { Pagination, PaginatedResult } from 'src/app/Models/Pagination';\nimport { EmployeeService } from 'src/app/services/Employee.service'; \nimport { Session } from 'src/app/Models/Session';\nimport { DashboardService } from 'src/app/services/AdminServices/Dashboard.service';\n\n@Component({\n  selector: 'app-basic-Emp-list',\n  templateUrl: './basic-Emp-list.component.html',\n  styleUrls: ['./basic-Emp-list.component.css']\n})\nexport class BasicEmpListComponent implements OnInit {\n  users: EmpRegister[];\n  user: EmpRegister;\n  pagination: Pagination;\n  userParams: any = {};\n  currentPage:number=1;\n  itemsPerPage:number=5;\n  isLoading:boolean;\n  selected=true;\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  constructor(private _user:EmployeeService) {this.isLoading=true }\n\n  ngOnInit() {\n    this.userParams.AdmissionNo = 'undefined';\n    this.userParams.OrderBy='undefined';\n    this.userParams.Gender = 'undefined';\n    this.loadUsers();\n  }\n  loadUsers() { \n    this._user.getEmpRegistration(parseInt(localStorage.getItem(\"sessionId\")), this.currentPage, this.itemsPerPage, this.userParams)\n      .subscribe((res: PaginatedResult<EmpRegister[]>) => {\n        this.users = res.result;\n        this.pagination = res.pagination;\n        this.isLoading = false;\n      }, error => {\n        console.log(error);\n      }); \n  }\n\n  pageChanged(event: any): void {\n    this.isLoading=true;\n    this.currentPage = event.page;\n    this.loadUsers();\n    this.isLoading=false;\n  }\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicEmpListComponent } from './basic-Emp-list.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { BasicEmployeeListRoutingModule } from './basic-Emp-list-routing.module';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { NgbDropdownModule, NgbButtonsModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    BasicEmployeeListRoutingModule,\n    PaginationModule.forRoot(),\n    NgbDropdownModule,\n    NgbButtonsModule,\n    NgbTooltipModule\n  ],\n  declarations: [BasicEmpListComponent]\n})\nexport class BasicEmpListModule { \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http'; \nimport { EmpRegister } from '../Models/EmpRegister';\nimport { PaginatedResult } from '../Models/Pagination';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  baseURL=environment.apiUrl;\n  constructor(private _http:HttpClient) { }\n\n  getEmp(id): Observable<EmpRegister> {\n    return this._http.get<EmpRegister>(this.baseURL + 'Employee/EmpIds/' + id);\n  }\n  getEmpRegistration(sessionId:number,page?, itemsPerPage?, userParams?): Observable<PaginatedResult<EmpRegister[]>> {\n    const paginatedResult: PaginatedResult<EmpRegister[]> = new PaginatedResult<EmpRegister[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n\n    if (userParams != null) { \n      params = params.append('AdmissionNo', userParams.AdmissionNo);\n      params = params.append('OrderBy', userParams.OrderBy);\n      params = params.append('Gender', userParams.Gender);\n    }\n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/'+sessionId, { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getTeacher(){ \n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/') \n  }\n\n  register(empRegister: EmpRegister) { \n  var stringStanders=  empRegister.standers.toString(); \n  empRegister.standers=stringStanders; \n    return this._http.post(this.baseURL + 'Employee/register', empRegister);\n  } \n  updateEmployee(id:number,emp:EmpRegister){\n    return  this._http.put(this.baseURL+'Employee/' + id,emp);\n    }\n    getLastEmpRegisterId(){\n      return this._http.get(this.baseURL+'Employee/' + 'last/');\n    }\n}"],"sourceRoot":"webpack:///"}