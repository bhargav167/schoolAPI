{"version":3,"sources":["./src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.component.html","./src/app/_resolver/stuQuickAdmissionEdit.resolver.ts","./src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit-routing.module.ts","./src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.component.css","./src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.component.ts","./src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.module.ts"],"names":[],"mappings":"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","file":"basic-stu-edit-basic-stu-edit-module-es2015.js","sourcesContent":["export default \" \\n      <div class=\\\"page-header\\\">\\n        <div class=\\\"page-block\\\">\\n          <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"page-header-title\\\">\\n                <ng-container><h5 class=\\\"m-b-10\\\">Edit</h5></ng-container>\\n              </div>\\n              <ul class=\\\"breadcrumb\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                  <a [routerLink]=\\\"['/dashboard/analytics/']\\\" ><i class=\\\"feather icon-home\\\"></i></a>\\n                 </li> \\n                 <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/basic/studentlist/']\\\">Students</a></li>\\n                   <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard/analytics/']\\\">Edit</a></li>\\n                \\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div> \\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\"> \\n      <app-card [hidHeader]=\\\"true\\\" cardClass=\\\"tab-card\\\">\\n        <h5 class=\\\"mb-3\\\">Student Data</h5> \\n        <ngb-tabset>\\n\\n          <ngb-tab title=\\\"Student Detail's\\\">\\n            <ng-template ngbTabContent>\\n              <h4>Student's Information</h4>\\n              <form #studentForm=\\\"ngForm\\\"  id=\\\"quick\\\" (ngSubmit)=\\\"studentForm.form.valid && updateStudent()\\\" novalidate> \\n              <div class=\\\"container\\\">\\n                  <div *ngIf=\\\"studentForm.dirty\\\" class=\\\"alert alert-info\\\">\\n                      <span>\\n                        <b> Information: </b> You have made changes. Any unsave change will be lost!\\\"</span>\\n                    </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n                      <input name=\\\"firstName\\\" [(ngModel)]=\\\"students.firstName\\\" \\n                      #firstName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && firstName.invalid }\\\" required\\n                       type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"First Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && firstName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"firstName.errors.required\\\">First Name is required</div>\\n                        </div>\\n                     </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Last Name</label>\\n                      <input name=\\\"lastName\\\" \\n                      #lastName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && lastName.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Last Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && lastName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"lastName.errors.required\\\">Last Name is required</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n                      <input name=\\\"email\\\" [(ngModel)]=\\\"students.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"First Name\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Father Name</label>\\n                      <input name=\\\"fatherName\\\" [(ngModel)]=\\\"students.fatherName\\\" \\n                      #fatherName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && fatherName.invalid }\\\" required\\n                      type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Father Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && fatherName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fatherName.errors.required\\\">Last Name is required</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                </div> \\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Gender</label>\\n                      <select name=\\\"gender\\\" [(ngModel)]=\\\"students.gender\\\" class=\\\"form-control\\\"\\n                        id=\\\"exampleFormControlSelect1\\\">\\n                        <option [selected]=\\\"selected\\\" [value]=\\\"students.gender\\\">{{students.gender}}</option>\\n                        <option value=\\\"male\\\" *ngIf=\\\"students.gender=='female'\\\">Male</option>\\n                        <option value=\\\"other\\\" *ngIf=\\\"students.gender=='female'\\\">Other</option>\\n                        <option value=\\\"female\\\" *ngIf=\\\"students.gender=='male'\\\">Female</option>\\n                        <option value=\\\"other\\\" *ngIf=\\\"students.gender=='male'\\\">Other</option>\\n                        <option value=\\\"male\\\" *ngIf=\\\"students.gender=='other'\\\">Male</option>\\n                        <option value=\\\"female\\\" *ngIf=\\\"students.gender=='other'\\\">Female</option>\\n                      </select>\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select gender</small>\\n                    </div>\\n                  </div>\\n              \\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n                      <select name=\\\"classLevel\\\" [(ngModel)]=\\\"students.classLevel\\\" (change)=\\\"LevelChange($event)\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option value=\\\"1\\\" *ngIf=\\\"clasLevel=='Junior'\\\">Junior</option>\\n                        <option value=\\\"2\\\" *ngIf=\\\"clasLevel=='Senior'\\\">Senior</option>\\n              \\n                        <option value=\\\"1\\\" *ngIf=\\\"clasLevel!='Junior'\\\">Junior</option>\\n                        <option value=\\\"2\\\" *ngIf=\\\"clasLevel!='Senior'\\\">Senior</option>\\n                      </select>\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Class level</small>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Class</label>\\n                      <select name=\\\"stander\\\" [(ngModel)]=\\\"students.standers\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option *ngIf=\\\"isChange==false\\\">{{students.standers}}</option>\\n                        <option *ngFor=\\\"let items of allClasses\\\">{{items.classes}}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Section</label>\\n                      <select  name=\\\"classsection\\\" [(ngModel)]=\\\"students.classsection\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option selected=\\\"selected\\\" >{{students.classsection | uppercase}}</option>\\n                        <option *ngIf=\\\"students.classsection=='A'\\\">B</option>\\n                        <option *ngIf=\\\"students.classsection=='A'\\\">C</option>\\n                        <option *ngIf=\\\"students.classsection=='B'\\\">A</option>\\n                        <option *ngIf=\\\"students.classsection=='B'\\\">C</option>\\n                        <option *ngIf=\\\"students.classsection=='C'\\\">A</option>\\n                        <option *ngIf=\\\"students.classsection=='C'\\\">B</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div> \\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Admission Number</label>\\n                      <input name=\\\"admissionNo\\\" type=\\\"number\\\" class=\\\"form-control\\\" \\n                      #admissionno=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && admissionno.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.admissionNo\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Admission no\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && admissionno.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"admissionno.errors.required\\\">Please enter admission no</div>\\n                        </div>\\n                  \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Roll Number</label>\\n                      <input required name=\\\"rollNo\\\" \\n                      #rollNo=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && rollNo.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.rollNo\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Roll no\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && rollNo.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"rollNo.errors.required\\\">Please enter roll no</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Date Of Addmission</label>\\n                      <input name=\\\"doa\\\" readonly [(ngModel)]=\\\"students.doa\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                     \\n                      aria-describedby=\\\"emailHelp\\\" placeholder=\\\"DOA\\\">\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select admission date</small>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Medium</label>\\n                      <input name=\\\"medium\\\" \\n                      #medium=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && medium.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.medium\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Medium\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && medium.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"medium.errors.required\\\">Please select medium</div>\\n                        </div> \\n                    </div>\\n                  </div> \\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"exampleInputEmail1\\\">Phone</label>\\n                        <input name=\\\"phone\\\" \\n                        #phone=\\\"ngModel\\\"\\n                        minlength=\\\"10\\\"\\n                        maxlength=\\\"10\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && phone.invalid }\\\" required\\n                        [(ngModel)]=\\\"students.phone\\\" (keyup)=\\\"checkAlpha($event)\\\" type=\\\"text\\\"\\n                          class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Phone\\\">\\n                          <div *ngIf=\\\"studentForm.submitted && phone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <div *ngIf=\\\"phone.errors.required\\\">Please Enter Phone number</div>\\n                              <div *ngIf=\\\"phone.errors.minlength\\\">Please Enter Valid number</div>\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Nationality</label> \\n                            <input name=\\\"nationality\\\"  \\n                            #nationality=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && nationality.invalid }\\\" required\\n                            [(ngModel)]=\\\"students.Nationality\\\"\\n                             type=\\\"text\\\" \\n                            class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Nationality\\\">\\n                            <div *ngIf=\\\"studentForm.submitted && nationality.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"nationality.errors.required\\\">Please enter nationality</div>\\n                            </div>\\n                            \\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Mother Tongue</label> \\n                            <input name=\\\"motherTongue\\\" [(ngModel)]=\\\"students.motherTongue\\\"\\n                           type=\\\"text\\\" \\n                             class=\\\"form-control\\\" \\n                             id=\\\"exampleInputEmail1\\\" \\n                             aria-describedby=\\\"emailHelp\\\" \\n                             placeholder=\\\"Mother tongue\\\">\\n                             <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Date Of Birth</label>\\n                            <input name=\\\"dob\\\" [(ngModel)]=\\\"students.dob\\\" readonly\\n                            type=\\\"text\\\"  \\n                            class=\\\"form-control\\\" \\n                            id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\"  \\n                            placeholder=\\\"Date of birth\\\"> \\n                            <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n                          </div>\\n                    </div>\\n                  \\n                  </div>\\n\\n                  <hr>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-lg-5\\\">\\n</div>\\n<div class=\\\"col-lg-2\\\">\\n    <button [disabled]=\\\"!studentForm.dirty\\\" form=\\\"quick\\\" type=\\\"submit\\\" class=\\\"btn btn-primary event-btn m-2\\\">\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"load-text\\\"> Loading...</span>\\n        <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Submit</span>\\n      </button>\\n \\n</div>\\n<div class=\\\"col-lg-5\\\">\\n \\n</div>\\n  </div> \\n              </div>\\n            </form>\\n            </ng-template>\\n          </ngb-tab>\\n\\n        <!-- Educational Detail's -->\\n        <ngb-tab title=\\\"Previous Educational Detail's\\\">\\n          <ng-template ngbTabContent>\\n            <h4>Student Previous Educational Information</h4>\\n            <form #eduForm=\\\"ngForm\\\" id=\\\"edu\\\" (ngSubmit)=\\\"eduForm.form.valid && registerEduDetails()\\\" novalidate>\\n              <div class=\\\"container\\\">\\n                \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous School Name</label>\\n                      <input\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\n                      [(ngModel)]=\\\"studentEdu.PreSchoolName\\\"\\n                       type=\\\"text\\\"\\n                       name=\\\"PreSchoolName\\\"\\n                        class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Previous school name\\\">                     \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous Class</label>\\n                      <input  required\\n                        [ngModelOptions]=\\\"{standalone: true}\\\"\\n                        [(ngModel)]=\\\"studentEdu.Preclass\\\"\\n                        name=\\\"Preclass\\\"\\n                         type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Previous Class\\\">\\n                     \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous Course</label>\\n                      <input\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\n                      [(ngModel)]=\\\"studentEdu.Course\\\"\\n                      name=\\\"Course\\\"\\n                      type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Course\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Year Of passing</label>\\n                      <input \\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\n                      [(ngModel)]=\\\"studentEdu.YearOfpassing\\\"\\n                      name=\\\"YearOfpassing\\\"\\n                      type=\\\"text\\\"\\n                        class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Year Of Passing\\\"> \\n                    </div>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous Medium</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                        name=\\\"PreMedium\\\"\\n                        [(ngModel)]=\\\"studentEdu.PreMedium\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\"\\n                        placeholder=\\\"Previous medium\\\"> \\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Marks Obtained</label>\\n                      <input name=\\\"MarksObtained\\\" [(ngModel)]=\\\"studentEdu.MarksObtained\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Marks Obtained\\\">\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter previous Marks Obtained</small>\\n                    </div>\\n                  </div> \\n                  <div class=\\\"input-group mb-3 col-lg-4\\\">\\n                      <label class=\\\"input-group\\\">Choose Student Photo</label>  \\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Upload</span>\\n                      </div>\\n                      <div class=\\\"custom-file\\\">\\n                        <input accept=\\\"image/*\\\" #image (change)=\\\"upload(file.files)\\\" type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile01\\\">\\n                        <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">Choose file</label>\\n                      </div>\\n                    </div>\\n\\n                </div>\\n                \\n                <hr>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-5\\\">\\n                  </div>\\n                  <div class=\\\"col-lg-2\\\">\\n                    <button  form=\\\"edu\\\" type=\\\"submit\\\" class=\\\"btn btn-primary event-btn m-2\\\">\\n                      <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n                      <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"load-text\\\"> Loading...</span>\\n                      <span *ngIf=\\\"!this.btnLoader1\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Submit</span>\\n                    </button>\\n        \\n                  </div>\\n                  <div class=\\\"col-lg-5\\\">\\n        \\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </ng-template>\\n        </ngb-tab>\\n\\n          <!-- Photos Detail's -->\\n          <ngb-tab title=\\\"Upload Photos Here\\\">\\n            <ng-template ngbTabContent>\\n              <div class=\\\"input-group mb-3 col-lg-4\\\">\\n                <label class=\\\"input-group\\\">Choose Student Photo</label>  \\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">Upload</span>\\n                </div>\\n                <div class=\\\"custom-file\\\">\\n                  <input accept=\\\"image/*\\\" #file  type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile01\\\">\\n                  <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">Choose file</label>\\n                </div>\\n              </div> \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-4\\\">\\n\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"uploadFile(file.files)\\\">Upload File</button>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <span class=\\\"upload\\\" *ngIf=\\\"progress > 0\\\">\\n                      {{progress}}%\\n                    </span>\\n                    <span class=\\\"upload\\\" *ngIf=\\\"message\\\">\\n                      {{message}}\\n                    </span>\\n                  </div>\\n                </div>\\n            </ng-template>\\n          </ngb-tab>\\n\\n            <!-- Login Detail's -->\\n          <ngb-tab title=\\\"Login Credentials\\\">\\n            <ng-template ngbTabContent>\\n              <form [formGroup]=\\\"formModel\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"Save()\\\"> \\n              <div class=\\\"input-group col-lg-4\\\">\\n                <label class=\\\"input-group\\\">User Name</label>   \\n                  <input  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"UserName\\\"\\n                [ngClass]=\\\"{'is-invalid': formModel.get('UserName').errors && formModel.get('UserName').touched}\\\"\\n                placeholder=\\\"UserName\\\"> \\n                <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('UserName').hasError('required') && formModel.get('UserName').touched\\\" class=\\\"invalid-feedback\\\">Please enter User Name</small>\\n              </div> \\n                \\n                  <div class=\\\"col-lg-4\\\">\\n                    <label class=\\\"input-group\\\">Password</label>   \\n                      <input \\n                      type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\"\\n                  [ngClass]=\\\"{'is-invalid': formModel.get('Password').errors && formModel.get('Password').touched}\\\"\\n                  placeholder=\\\"Password\\\"> \\n                  <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('Password').hasError('required') && formModel.get('Password').touched\\\" class=\\\"invalid-feedback\\\">Please enter Password</small>\\n                  </div>\\n                  <br>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!formModel.valid\\\"  class=\\\"btn btn-success\\\">Save</button>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                     \\n                  </div>\\n                </form>\\n            </ng-template>\\n          </ngb-tab>\\n\\n        </ngb-tabset>\\n      </app-card>\\n    </div>\\n  </div>\\n  \"","import { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/catch';\r\nimport { QuickAdmission } from '../Models/QuickAdmission';\r\nimport { ClasslevelService } from '../services/classlevel.service';\r\n import { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class stuQuickAdmissionEdit implements Resolve<QuickAdmission> { \r\n    constructor(private userService: ClasslevelService,\r\n        private router: Router) {} \r\n        resolve(route: ActivatedRouteSnapshot): Observable<QuickAdmission> {\r\n            return this.userService.getQuickStudent(route.params['id']).pipe(\r\n                catchError(error => { \r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}","import { Routes, RouterModule } from '@angular/router';\nimport { BasicStuEditComponent } from './basic-stu-edit.component';\nimport { NgModule } from '@angular/core';\nimport { PreventUnsavedChanges } from 'src/app/_gaurd/PreventUnsavedChanges.guard';\n \nconst routes: Routes = [\n  {\n    path: '', \n    component: BasicStuEditComponent \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n \nexport class BasicStudentEditRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtc3R1LWVkaXQvYmFzaWMtc3R1LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild, HostListener, EventEmitter, Output } from '@angular/core';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuickAdmission } from 'src/app/Models/QuickAdmission';\nimport { NgForm,  FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { stuEduDetails } from 'src/app/Models/stuEduDetails';\nimport { HttpRequest, HttpClient, HttpEventType } from '@angular/common/http';\nimport { AuthRegister } from 'src/app/Models/AuthRegister';\nimport { AuthService } from 'src/app/services/AuthServices/Auth.service';\n@Component({\n  selector: 'app-basic-stu-edit',\n  templateUrl: './basic-stu-edit.component.html',\n  styleUrls: ['./basic-stu-edit.component.css']\n})\nexport class BasicStuEditComponent implements OnInit {\nstudentEdu:stuEduDetails;\nstudents:QuickAdmission; \ngender:string;\nclasLevel:string;\nselected=true; \nclassLevels:any;\nallClasses:any;\nisChange:boolean=false;\npublic btnLoader: boolean;\npublic btnLoader1: boolean; \nformModel:FormGroup;\nauthRegister:AuthRegister;\npublic progress: number;\npublic message: string;\nrole:string='Student';\n@Output() public onUploadFinished = new EventEmitter();\n@ViewChild('studentForm', {static: true}) studentForm: NgForm;\n@ViewChild('eduForm', {static: true}) eduForm: NgForm;\n@HostListener('window:beforeunload', ['$event'])\nunloadNotification($event: any) {\n  if (this.studentForm.dirty) {\n    $event.returnValue = true;\n  }\n}\n  constructor(private http: HttpClient,private _route:ActivatedRoute,\n    private _classLevel:ClasslevelService,private _authServices:AuthService,\n     private fb:FormBuilder,private toastr: ToastrService) { \n    this.btnLoader1 = false;\n    this.btnLoader = false;}\n\n  ngOnInit() {  \n    this.createPost();\n    this._classLevel.getQuickStudent(+this._route.snapshot.params['id']).subscribe((user: QuickAdmission) => {\n      this.students = user;   \n      this.AssignSelectedDropDown(); \n      this.LevelChangeOnLoad(+this.students.classLevel);  \n     \n    }, error => { \n    }) \n    this._classLevel.getEduStudent(+this._route.snapshot.params['id']).subscribe((eduStudent: stuEduDetails) => { \n      this.studentEdu = eduStudent;\n    }, error => {\n    }) \n  }\n\n  createPost(){\n    this.formModel =this.fb.group({\n      UserName:['',Validators.required], \n      Password:['',Validators.required]\n    }) \n  }\n\n  public uploadFile = (files) => { \n    if (files.length === 0) {\n      return;\n    }\n \n    let fileToUpload = <File>files[0];\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n \n    this.http.post(`http://localhost:5000/api/QuickAdmission/${+this._route.snapshot.params['id']}/Upload`, formData, {reportProgress: true, observe: 'events'})\n      .subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress)\n          this.progress = Math.round(100 * event.loaded / event.total);\n        else if (event.type === HttpEventType.Response) {\n          this.message = 'Upload success.';\n          this.onUploadFinished.emit(event.body);\n        }\n      });\n  } \n\n\n  updateStudent(){ \n    this.btnLoader = true;\n    this._classLevel.updateAdmission(+this._route.snapshot.params['id'],this.students).subscribe(next=>{\n      this.toastr.success('Student Details Updated!', 'Data Saved');\n      this.btnLoader = false;\n     this.studentForm.reset(this.students); \n    },error=>{ \n      this.toastr.error('Error in updating!', 'Failed');\n      this.btnLoader = false; \n    })\n   } \n   \n   //Assign Login Details\n   Save() { \n    this.btnLoader = true;  \n     if (this.formModel.valid) {\n      this.authRegister = Object.assign({}, this.formModel.value);\n      this._authServices.Sturegister(this.authRegister,this.role,this.students.admissionNo).subscribe(() => {\n        this.toastr.success('Role Assigned!', 'Data Saved');\n        this.formModel.reset();\n        this.btnLoader = false;\n        this.createPost();\n      }, error => {\n        this.toastr.error('Role Assigned Failed!', 'Problem in saving Data',error);\n        this.btnLoader = false;\n      },()=>{ \n      });\n    }\n  }\n   \n  registerEduDetails() {\n    this.btnLoader1 = true; \n    this.studentEdu.stuId=+this._route.snapshot.params['id']; \n    this._classLevel.registerUpdateEdu(+this._route.snapshot.params['id'],this.studentEdu).subscribe(next=>{\n      this.toastr.success('Student Educational Details Updated!', 'Data Saved');\n      this.btnLoader1 = false; \n    },error=>{ \n      this.toastr.error('Error in updating!', 'Failed');\n      this.btnLoader1 = false;\n    }) \n  }\n\n  AssignSelectedDropDown(){\n        \n    if (this.students.classLevel == '1') {\n      this.clasLevel = 'Junior';\n    }\n    if (this.students.classLevel == '2') {\n      this.clasLevel = 'Senior';\n    }\n\n\n\n    if (this.students.gender == \"1\") {\n      this.gender = 'Male'\n    }\n    if (this.students.gender == \"2\") {\n      this.gender = 'Female'\n    }\n    if (this.students.gender == \"3\") {\n      this.gender = 'Other'\n    }\n  }\n\n  LevelChange(event){ \n    this.isChange=true;\n    let Ids=event.target.value;\n    this._classLevel.getClass(Ids).subscribe((data)=>{ \n      this.allClasses=data;\n    })\n  }\n\n  LevelChangeOnLoad(id:number){  \n    this._classLevel.getClass(id).subscribe((data)=>{ \n      this.allClasses=data;\n      \n    })\n  }\n  \n// check phoneNo contain alphabet\ncheckAlpha(event) {\n  let val = event.target.value;\n  if (isNaN(val)) {\n    let str = val.substring(0, val.length - 1);\n    event.target.value = str;\n  }\n} \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n import { SharedModule } from 'src/app/theme/shared/shared.module';\n import { BasicStudentEditRoutingModule } from './basic-stu-edit-routing.module';\nimport { BasicStuEditComponent } from './basic-stu-edit.component';\nimport { stuQuickAdmissionEdit } from 'src/app/_resolver/stuQuickAdmissionEdit.resolver';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ToastrModule } from 'ngx-toastr';\nimport { PreventUnsavedChanges } from 'src/app/_gaurd/PreventUnsavedChanges.guard';\n \n@NgModule({\n  imports: [\n  CommonModule,\n  SharedModule,\n  BasicStudentEditRoutingModule,\n  BsDatepickerModule.forRoot(),\n  NgbTabsetModule,\n  ToastrModule.forRoot()\n  ],\n  declarations: [BasicStuEditComponent],\n  providers:[stuQuickAdmissionEdit]\n})\nexport class BasicStuEditModule { }\n"],"sourceRoot":"webpack:///"}