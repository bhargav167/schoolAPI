{"version":3,"sources":["./src/app/demo/ui-elements/ui-basic/basic-student/basic-student.component.html","./src/app/demo/ui-elements/ui-basic/basic-student/basic-student-routing.module.ts","./src/app/demo/ui-elements/ui-basic/basic-student/basic-student.component.css","./src/app/demo/ui-elements/ui-basic/basic-student/basic-student.component.ts","./src/app/demo/ui-elements/ui-basic/basic-student/basic-student.module.ts"],"names":[],"mappings":"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","file":"basic-student-basic-student-module-es2015.js","sourcesContent":["export default \" \\n<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"registerStudent\\\" (ngSubmit)=\\\"register()\\\"> \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n      \\n        <input formControlName=\\\"firstName\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('firstName').errors && registerStudent.get('firstName').touched}\\\"\\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"First Name\\\">  \\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('firstName').hasError('required') && registerStudent.get('firstName').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('firstName').hasError('minlength') && registerStudent.get('firstName').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid name. Too short</small>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Last Name</label>\\n\\n        <input formControlName=\\\"lastName\\\" type=\\\"text\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('lastName').errors && registerStudent.get('lastName').touched}\\\"\\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Last Name\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('lastName').hasError('required') && registerStudent.get('lastName').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('lastName').hasError('minlength') && registerStudent.get('lastName').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid name. Too short</small>\\n          \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n        <input formControlName=\\\"email\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('email').errors && registerStudent.get('email').touched}\\\"\\n        type=\\\"email\\\" class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Enter email\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('email').hasError('required') && registerStudent.get('email').touched\\\" class=\\\"invalid-feedback\\\">Please enter First Name</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('email').hasError('minlength') && registerStudent.get('email').touched\\\" class=\\\"invalid-feedback\\\">Please enter valid email. Too short</small>\\n      \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Gender</label>\\n        <select formControlName=\\\"gender\\\" class=\\\"form-control\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('gender').errors && registerStudent.get('gender').touched}\\\"\\n        id=\\\"exampleFormControlSelect1\\\">\\n          <option [selected]=\\\"selected\\\" disabled>--Select--</option>\\n          <option value=\\\"male\\\">Male</option>\\n          <option value=\\\"female\\\">Female</option>\\n          <option value=\\\"other\\\">Other</option> \\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select gender</small>\\n       </div>\\n    </div>\\n  </div> \\n\\n  \\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Date Of Birth</label>\\n          <input formControlName=\\\"dob\\\" \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('dob').errors && registerStudent.get('dob').touched}\\\"\\n          type=\\\"text\\\" \\n          \\n          class=\\\"form-control\\\" \\n          id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n          name=\\\"dp\\\"\\n          placeholder=\\\"Date of birth\\\" bsDatepicker>\\n \\n\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Mother Tongue</label>\\n          \\n          <input formControlName=\\\"motherTongue\\\"\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('motherTongue').errors && registerStudent.get('motherTongue').touched}\\\"\\n           type=\\\"text\\\" \\n           class=\\\"form-control\\\" \\n           id=\\\"exampleInputEmail1\\\" \\n           aria-describedby=\\\"emailHelp\\\" \\n           placeholder=\\\"Mother tongue\\\">\\n           <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Nationality</label> \\n          <input \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('nationality').errors && registerStudent.get('nationality').touched}\\\"\\n          formControlName=\\\"nationality\\\" type=\\\"text\\\" \\n          class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Nationality\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter nationality</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Father Name</label>\\n            <input formControlName=\\\"fathername\\\"\\n            [ngClass]=\\\"{'is-invalid': registerStudent.get('fathername').errors && registerStudent.get('fathername').touched}\\\" \\n            type=\\\"fathername\\\" \\n             class=\\\"form-control\\\" \\n             id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n             placeholder=\\\"Father Name\\\">\\n             <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter father name</small>\\n            </div>\\n        </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Phone</label>\\n        <input formControlName=\\\"phone\\\" \\n        (keyup)=\\\"checkAlpha($event)\\\"\\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('phone').errors && registerStudent.get('phone').touched}\\\" \\n        type=\\\"text\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n        placeholder=\\\"Phone\\\">\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('required') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Please enter Mobile no</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('minlength') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Enter Number must be 10 digit</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('maxlength') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Enter Number must be 10 digit</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('phone').hasError('pattern') && registerStudent.get('phone').touched\\\" class=\\\"invalid-feedback\\\">Only digit allow</small>\\n\\n          </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n        <select (change)=\\\"LevelChange($event)\\\" formControlName=\\\"classLevel\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('classLevel').errors && registerStudent.get('classLevel').touched}\\\" \\n        class=\\\"form-control\\\" \\n        id=\\\"exampleFormControlSelect1\\\">\\n        <option value=\\\"-1\\\"  [selected]=\\\"selected\\\" disabled>--Select--</option>          \\n           <option value=\\\"1\\\">Junior</option>\\n          <option value=\\\"2\\\">Senior</option>\\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Class level</small>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class</label>\\n        <select formControlName=\\\"standers\\\" \\n        (change)=\\\"ClassChange($event)\\\"\\n        appSelectRequiredValidator\\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('standers').errors && registerStudent.get('standers').touched}\\\" \\n        class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n        <option [selected]=\\\"selected\\\">--Select--</option>\\n         <option *ngFor=\\\"let items of allClasses\\\">{{items.classes}}</option>\\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select class</small>\\n        <small id=\\\"emailHelp\\\" *ngIf=\\\"registerStudent.get('standers').hasError('defaultSelected') && registerStudent.get('standers').touched\\\" class=\\\"invalid-feedback\\\">Only digit allow</small>\\n \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class Section</label>\\n        <select formControlName=\\\"classsection\\\" \\n        [ngClass]=\\\"{'is-invalid': registerStudent.get('classsection').errors && registerStudent.get('classsection').touched}\\\" \\n        class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n        <option [selected]=\\\"selected\\\">--Select--</option>\\n        <option *ngFor=\\\"let items of sections\\\">{{items}}</option>\\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Section</small>\\n      </div>\\n    </div>\\n  \\n  </div>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Admission Number</label>\\n          <input formControlName=\\\"admissionno\\\" \\n           type=\\\"text\\\"  \\n          [value]=\\\"admissionNo\\\"\\n          readonly\\n          class=\\\"form-control\\\" \\n          id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" \\n          placeholder=\\\"Admission no\\\">\\n         </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Roll Number</label>\\n          <input formControlName=\\\"rollno\\\" \\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('rollno').errors && registerStudent.get('rollno').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Roll no\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter roll no</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Date Of Addmission</label>\\n          <input formControlName=\\\"doa\\\" \\n          [value]=\\\"todaydate\\\"\\n          [bsConfig]=\\\"bsConfig\\\"\\n          bsDatepicker\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('doa').errors && registerStudent.get('doa').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"DOA\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select admission date</small>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Medium</label>\\n          <input  formControlName=\\\"medium\\\"\\n          [ngClass]=\\\"{'is-invalid': registerStudent.get('medium').errors && registerStudent.get('medium').touched}\\\" \\n          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Medium\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select medium</small>\\n\\n        </div>\\n      </div>\\n    \\n  </div>\\n\\n<hr>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-lg-5\\\">\\n</div>\\n<div class=\\\"col-lg-2\\\">\\n    <button class=\\\"btn btn-primary event-btn m-2\\\" type=\\\"submit\\\" [disabled]=\\\"!registerStudent.valid\\\">\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"load-text\\\"> Loading...</span>\\n        <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Save</span>\\n      </button>\\n    \\n</div>\\n<div class=\\\"col-lg-5\\\">\\n \\n</div>\\n  </div> \\n\\n</form> \\n </div>\\n\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {BasicStudentComponent} from './basic-student.component';\r\n \r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicStudentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicStudentRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtc3R1ZGVudC9iYXNpYy1zdHVkZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker/bs-datepicker.config';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { QuickAdmission } from 'src/app/Models/QuickAdmission';\nimport { ToastrService } from 'ngx-toastr';\nimport { Class } from 'src/app/Models/Class';\n\n@Component({\n  selector: 'app-basic-student',\n  templateUrl: './basic-student.component.html',\n  styleUrls: ['./basic-student.component.css']\n})\nexport class BasicStudentComponent implements OnInit {\npublic btnLoader: boolean;\nregisterStudent:FormGroup;\nselected=true;\nbsConfig: Partial<BsDatepickerConfig>;\nclassLevels:any;\nallClasses:any;\nallSec:Class;\nsections:string[];\nquickAdmission:QuickAdmission;\ntodaydate:any;\nadmissionNo:any;\nconstructor(private fb:FormBuilder,private _classLevel:ClasslevelService,private toastr: ToastrService) {\n  this.btnLoader = false;\n }\n\n  ngOnInit() { \n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n    this.todaydate = new Date();\n    var dd = String(this.todaydate.getDate()).padStart(2, '0');\n    var mm = String(this.todaydate.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = this.todaydate.getFullYear(); \n    this.todaydate = mm + '/' + dd + '/' + yyyy;\n   \n    this.createRegisterForm();\n    this.getLastId();\n  }\n\n  createRegisterForm(){\n    this.registerStudent=this.fb.group({\n      firstName:['',[Validators.required,Validators.maxLength(12),Validators.minLength(3)]],\n      lastName:['',[Validators.required,Validators.maxLength(12),Validators.minLength(3)]],\n      email:['',[Validators.required,Validators.maxLength(25),Validators.minLength(14)]],\n      gender:['',Validators.required],\n      dob:['',Validators.required],\n      doa:[this.todaydate],\n      motherTongue:['HINDI',Validators.required],\n      nationality:['INDIAN',Validators.required],\n      fathername:['',Validators.required],\n      phone:['',[Validators.required,Validators.minLength(10),Validators.maxLength(10),Validators.pattern('^[0-9]*$')]],\n      classLevel:['',Validators.required],\n      standers:['',Validators.required],\n      classsection:['',Validators.required],\n      admissionno:[this.admissionNo],\n      rollno:['',Validators.required],\n      medium:['ENGLISH',Validators.required],\n    })\n  } \n\n  LevelChange(event) {\n    let Ids = event.target.value;\n    this._classLevel.getClass(Ids).subscribe((data) => {\n      this.allClasses = data;\n    })\n  }\n\n  ClassChange(event) {\n    let classes = event.target.value;\n    this._classLevel.getSection(classes).subscribe((data:Class) => {\n      this.allSec = data;\n     this.sections= this.allSec.sections.split(',');\n      \n    })\n  }\n\nregister() { \n  if (this.registerStudent.controls['standers'].value == \"--Select--\") \n  return this.toastr.warning(\"Please Select Correct Class\");\n  \n  this.btnLoader = true;  \n   if (this.registerStudent.valid) {\n    this.quickAdmission = Object.assign({}, this.registerStudent.value); \n    this.quickAdmission.admissionNo=this.admissionNo.toString();\n    this._classLevel.register(this.quickAdmission).subscribe(() => {\n      this.toastr.success('Quick Admission Done!', 'Data Saved');\n      this.registerStudent.reset();\n      this.btnLoader = false;\n      this.getLastId();\n      this.createRegisterForm();\n    }, error => { \n      this.toastr.error('Quick Admission Failed!', 'Problem in saving Data',error);\n      this.btnLoader = false;\n    },()=>{ \n    });\n  }\n}\n\n// check phoneNo contain alphabet\n  checkAlpha(event) {\n    let val = event.target.value;\n    if (isNaN(val)) {\n      let str = val.substring(0, val.length - 1);\n      event.target.value = str;\n    }\n    \n}\ngetLastId(){\n  this._classLevel.getLastAdmissionId().subscribe((data:QuickAdmission)=>{ \n  if(data==null){\n    this.admissionNo=1;\n  }\n     this.admissionNo=data.admissionNo; \n this.admissionNo=parseInt(this.admissionNo)+1; \n   })\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicStudentComponent } from './basic-student.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { BasicStudentRoutingModule } from './basic-student-routing.module';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ToastrModule } from 'ngx-toastr';\n @NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    BasicStudentRoutingModule, \n     BsDatepickerModule.forRoot(),\n     ToastrModule.forRoot()\n  ],\n  declarations: [BasicStudentComponent]\n})\nexport class BasicStudentModule { }\n"],"sourceRoot":"webpack:///"}