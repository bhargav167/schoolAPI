{"version":3,"sources":["src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.component.html","src/app/_resolver/stuQuickAdmissionEdit.resolver.ts","src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit-routing.module.ts","src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.component.css","src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.component.ts","src/app/demo/ui-elements/ui-basic/basic-stu-edit/basic-stu-edit.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \" \\n      <div class=\\\"page-header\\\">\\n        <div class=\\\"page-block\\\">\\n          <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <div class=\\\"page-header-title\\\">\\n                <ng-container><h5 class=\\\"m-b-10\\\">Edit</h5></ng-container>\\n              </div>\\n              <ul class=\\\"breadcrumb\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                  <a [routerLink]=\\\"['/dashboard/analytics/']\\\" ><i class=\\\"feather icon-home\\\"></i></a>\\n                 </li> \\n                 <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/basic/studentlist/']\\\">Students</a></li>\\n                   <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard/analytics/']\\\">Edit</a></li>\\n                \\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n      </div> \\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\"> \\n      <app-card [hidHeader]=\\\"true\\\" cardClass=\\\"tab-card\\\">\\n        <h5 class=\\\"mb-3\\\">Student Data</h5> \\n        <ngb-tabset>\\n\\n          <ngb-tab title=\\\"Student Detail's\\\">\\n            <ng-template ngbTabContent>\\n              <h4>Student's Information</h4>\\n              <form #studentForm=\\\"ngForm\\\"  id=\\\"quick\\\" (ngSubmit)=\\\"studentForm.form.valid && updateStudent()\\\" novalidate> \\n              <div class=\\\"container\\\">\\n                  <div *ngIf=\\\"studentForm.dirty\\\" class=\\\"alert alert-info\\\">\\n                      <span>\\n                        <b> Information: </b> You have made changes. Any unsave change will be lost!\\\"</span>\\n                    </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">First Name</label>\\n                      <input name=\\\"firstName\\\" [(ngModel)]=\\\"students.firstName\\\" \\n                      #firstName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && firstName.invalid }\\\" required\\n                       type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"First Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && firstName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"firstName.errors.required\\\">First Name is required</div>\\n                        </div>\\n                     </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Last Name</label>\\n                      <input name=\\\"lastName\\\" \\n                      #lastName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && lastName.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Last Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && lastName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"lastName.errors.required\\\">Last Name is required</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n                      <input name=\\\"email\\\" [(ngModel)]=\\\"students.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"First Name\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Father Name</label>\\n                      <input name=\\\"fatherName\\\" [(ngModel)]=\\\"students.fatherName\\\" \\n                      #fatherName=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && fatherName.invalid }\\\" required\\n                      type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Father Name\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && fatherName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fatherName.errors.required\\\">Last Name is required</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                </div> \\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Gender</label>\\n                      <select name=\\\"gender\\\" [(ngModel)]=\\\"students.gender\\\" class=\\\"form-control\\\"\\n                        id=\\\"exampleFormControlSelect1\\\">\\n                        <option [selected]=\\\"selected\\\" [value]=\\\"students.gender\\\">{{students.gender}}</option>\\n                        <option value=\\\"male\\\" *ngIf=\\\"students.gender=='female'\\\">Male</option>\\n                        <option value=\\\"other\\\" *ngIf=\\\"students.gender=='female'\\\">Other</option>\\n                        <option value=\\\"female\\\" *ngIf=\\\"students.gender=='male'\\\">Female</option>\\n                        <option value=\\\"other\\\" *ngIf=\\\"students.gender=='male'\\\">Other</option>\\n                        <option value=\\\"male\\\" *ngIf=\\\"students.gender=='other'\\\">Male</option>\\n                        <option value=\\\"female\\\" *ngIf=\\\"students.gender=='other'\\\">Female</option>\\n                      </select>\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select gender</small>\\n                    </div>\\n                  </div>\\n              \\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n                      <select name=\\\"classLevel\\\" [(ngModel)]=\\\"students.classLevel\\\" (change)=\\\"LevelChange($event)\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option value=\\\"1\\\" *ngIf=\\\"clasLevel=='Junior'\\\">Junior</option>\\n                        <option value=\\\"2\\\" *ngIf=\\\"clasLevel=='Senior'\\\">Senior</option>\\n              \\n                        <option value=\\\"1\\\" *ngIf=\\\"clasLevel!='Junior'\\\">Junior</option>\\n                        <option value=\\\"2\\\" *ngIf=\\\"clasLevel!='Senior'\\\">Senior</option>\\n                      </select>\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Class level</small>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Class</label>\\n                      <select name=\\\"stander\\\" [(ngModel)]=\\\"students.standers\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option *ngIf=\\\"isChange==false\\\">{{students.standers}}</option>\\n                        <option *ngFor=\\\"let items of allClasses\\\">{{items.classes}}</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Section</label>\\n                      <select  name=\\\"classsection\\\" [(ngModel)]=\\\"students.classsection\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option selected=\\\"selected\\\" >{{students.classsection | uppercase}}</option>\\n                        <option *ngIf=\\\"students.classsection=='A'\\\">B</option>\\n                        <option *ngIf=\\\"students.classsection=='A'\\\">C</option>\\n                        <option *ngIf=\\\"students.classsection=='B'\\\">A</option>\\n                        <option *ngIf=\\\"students.classsection=='B'\\\">C</option>\\n                        <option *ngIf=\\\"students.classsection=='C'\\\">A</option>\\n                        <option *ngIf=\\\"students.classsection=='C'\\\">B</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                </div> \\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Admission Number</label>\\n                      <input name=\\\"admissionNo\\\" type=\\\"number\\\" class=\\\"form-control\\\" \\n                      #admissionno=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && admissionno.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.admissionNo\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Admission no\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && admissionno.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"admissionno.errors.required\\\">Please enter admission no</div>\\n                        </div>\\n                  \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Roll Number</label>\\n                      <input required name=\\\"rollNo\\\" \\n                      #rollNo=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && rollNo.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.rollNo\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Roll no\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && rollNo.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"rollNo.errors.required\\\">Please enter roll no</div>\\n                        </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Date Of Addmission</label>\\n                      <input name=\\\"doa\\\" readonly [(ngModel)]=\\\"students.doa\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                     \\n                      aria-describedby=\\\"emailHelp\\\" placeholder=\\\"DOA\\\">\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select admission date</small>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Medium</label>\\n                      <input name=\\\"medium\\\" \\n                      #medium=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && medium.invalid }\\\" required\\n                      [(ngModel)]=\\\"students.medium\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Medium\\\">\\n                        <div *ngIf=\\\"studentForm.submitted && medium.invalid\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"medium.errors.required\\\">Please select medium</div>\\n                        </div> \\n                    </div>\\n                  </div> \\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"exampleInputEmail1\\\">Phone</label>\\n                        <input name=\\\"phone\\\" \\n                        #phone=\\\"ngModel\\\"\\n                        minlength=\\\"10\\\"\\n                        maxlength=\\\"10\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && phone.invalid }\\\" required\\n                        [(ngModel)]=\\\"students.phone\\\" (keyup)=\\\"checkAlpha($event)\\\" type=\\\"text\\\"\\n                          class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Phone\\\">\\n                          <div *ngIf=\\\"studentForm.submitted && phone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                              <div *ngIf=\\\"phone.errors.required\\\">Please Enter Phone number</div>\\n                              <div *ngIf=\\\"phone.errors.minlength\\\">Please Enter Valid number</div>\\n                          </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Nationality</label> \\n                            <input name=\\\"nationality\\\"  \\n                            #nationality=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': studentForm.submitted && nationality.invalid }\\\" required\\n                            [(ngModel)]=\\\"students.Nationality\\\"\\n                             type=\\\"text\\\" \\n                            class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Nationality\\\">\\n                            <div *ngIf=\\\"studentForm.submitted && nationality.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"nationality.errors.required\\\">Please enter nationality</div>\\n                            </div>\\n                            \\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Mother Tongue</label> \\n                            <input name=\\\"motherTongue\\\" [(ngModel)]=\\\"students.motherTongue\\\"\\n                           type=\\\"text\\\" \\n                             class=\\\"form-control\\\" \\n                             id=\\\"exampleInputEmail1\\\" \\n                             aria-describedby=\\\"emailHelp\\\" \\n                             placeholder=\\\"Mother tongue\\\">\\n                             <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-lg-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"exampleInputEmail1\\\">Date Of Birth</label>\\n                            <input name=\\\"dob\\\" [(ngModel)]=\\\"students.dob\\\" readonly\\n                            type=\\\"text\\\"  \\n                            class=\\\"form-control\\\" \\n                            id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\"  \\n                            placeholder=\\\"Date of birth\\\"> \\n                            <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Birthdate</small>\\n                          </div>\\n                    </div>\\n                  \\n                  </div>\\n\\n                  <hr>\\n  <div class=\\\"row\\\">\\n<div class=\\\"col-lg-5\\\">\\n</div>\\n<div class=\\\"col-lg-2\\\">\\n    <button [disabled]=\\\"!studentForm.dirty\\\" form=\\\"quick\\\" type=\\\"submit\\\" class=\\\"btn btn-primary event-btn m-2\\\">\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n        <span *ngIf=\\\"this.btnLoader\\\"  class=\\\"load-text\\\"> Loading...</span>\\n        <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Submit</span>\\n      </button>\\n \\n</div>\\n<div class=\\\"col-lg-5\\\">\\n \\n</div>\\n  </div> \\n              </div>\\n            </form>\\n            </ng-template>\\n          </ngb-tab>\\n\\n        <!-- Educational Detail's -->\\n        <ngb-tab title=\\\"Previous Educational Detail's\\\">\\n          <ng-template ngbTabContent>\\n            <h4>Student Previous Educational Information</h4>\\n            <form #eduForm=\\\"ngForm\\\" id=\\\"edu\\\" (ngSubmit)=\\\"eduForm.form.valid && registerEduDetails()\\\" novalidate>\\n              <div class=\\\"container\\\">\\n                \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous School Name</label>\\n                      <input\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\n                      [(ngModel)]=\\\"studentEdu.PreSchoolName\\\"\\n                       type=\\\"text\\\"\\n                       name=\\\"PreSchoolName\\\"\\n                        class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Previous school name\\\">                     \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous Class</label>\\n                      <input  required\\n                        [ngModelOptions]=\\\"{standalone: true}\\\"\\n                        [(ngModel)]=\\\"studentEdu.Preclass\\\"\\n                        name=\\\"Preclass\\\"\\n                         type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Previous Class\\\">\\n                     \\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous Course</label>\\n                      <input\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\n                      [(ngModel)]=\\\"studentEdu.Course\\\"\\n                      name=\\\"Course\\\"\\n                      type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n                        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Course\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Year Of passing</label>\\n                      <input \\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\n                      [(ngModel)]=\\\"studentEdu.YearOfpassing\\\"\\n                      name=\\\"YearOfpassing\\\"\\n                      type=\\\"text\\\"\\n                        class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Year Of Passing\\\"> \\n                    </div>\\n                  </div>\\n                </div>\\n        \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Previous Medium</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n                        name=\\\"PreMedium\\\"\\n                        [(ngModel)]=\\\"studentEdu.PreMedium\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\"\\n                        placeholder=\\\"Previous medium\\\"> \\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleInputEmail1\\\">Marks Obtained</label>\\n                      <input name=\\\"MarksObtained\\\" [(ngModel)]=\\\"studentEdu.MarksObtained\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                        id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Marks Obtained\\\">\\n                      <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please enter previous Marks Obtained</small>\\n                    </div>\\n                  </div> \\n                  <div class=\\\"input-group mb-3 col-lg-4\\\">\\n                      <label class=\\\"input-group\\\">Choose Student Photo</label>  \\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\">Upload</span>\\n                      </div>\\n                      <div class=\\\"custom-file\\\">\\n                        <input accept=\\\"image/*\\\" #image (change)=\\\"upload(file.files)\\\" type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile01\\\">\\n                        <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">Choose file</label>\\n                      </div>\\n                    </div>\\n\\n                </div>\\n                \\n                <hr>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-5\\\">\\n                  </div>\\n                  <div class=\\\"col-lg-2\\\">\\n                    <button  form=\\\"edu\\\" type=\\\"submit\\\" class=\\\"btn btn-primary event-btn m-2\\\">\\n                      <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n                      <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"load-text\\\"> Loading...</span>\\n                      <span *ngIf=\\\"!this.btnLoader1\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-save\\\"></i> Submit</span>\\n                    </button>\\n        \\n                  </div>\\n                  <div class=\\\"col-lg-5\\\">\\n        \\n                  </div>\\n                </div>\\n              </div>\\n            </form>\\n          </ng-template>\\n        </ngb-tab>\\n\\n          <!-- Photos Detail's -->\\n          <ngb-tab title=\\\"Upload Photos Here\\\">\\n            <ng-template ngbTabContent>\\n              <div class=\\\"input-group mb-3 col-lg-4\\\">\\n                <label class=\\\"input-group\\\">Choose Student Photo</label>  \\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">Upload</span>\\n                </div>\\n                <div class=\\\"custom-file\\\">\\n                  <input accept=\\\"image/*\\\" #file  type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile01\\\">\\n                  <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">Choose file</label>\\n                </div>\\n              </div> \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-4\\\">\\n\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"uploadFile(file.files)\\\">Upload File</button>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <span class=\\\"upload\\\" *ngIf=\\\"progress > 0\\\">\\n                      {{progress}}%\\n                    </span>\\n                    <span class=\\\"upload\\\" *ngIf=\\\"message\\\">\\n                      {{message}}\\n                    </span>\\n                  </div>\\n                </div>\\n            </ng-template>\\n          </ngb-tab>\\n\\n            <!-- Login Detail's -->\\n          <ngb-tab title=\\\"Login Credentials\\\">\\n            <ng-template ngbTabContent>\\n              <form [formGroup]=\\\"formModel\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"Save()\\\"> \\n              <div class=\\\"input-group col-lg-4\\\">\\n                <label class=\\\"input-group\\\">User Name</label>   \\n                  <input  type=\\\"text\\\" class=\\\"form-control\\\" \\n                  formControlName=\\\"UserName\\\"\\n                [ngClass]=\\\"{'is-invalid': formModel.get('UserName').errors && formModel.get('UserName').touched}\\\"\\n                placeholder=\\\"UserName\\\"> \\n                <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('UserName').hasError('required') && formModel.get('UserName').touched\\\" class=\\\"invalid-feedback\\\">Please enter User Name</small>\\n              </div> \\n                \\n                  <div class=\\\"col-lg-4\\\">\\n                    <label class=\\\"input-group\\\">Password</label>   \\n                      <input \\n                      type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\"\\n                  [ngClass]=\\\"{'is-invalid': formModel.get('Password').errors && formModel.get('Password').touched}\\\"\\n                  placeholder=\\\"Password\\\"> \\n                  <small id=\\\"emailHelp\\\" *ngIf=\\\"formModel.get('Password').hasError('required') && formModel.get('Password').touched\\\" class=\\\"invalid-feedback\\\">Please enter Password</small>\\n                  </div>\\n                  <br>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!formModel.valid\\\"  class=\\\"btn btn-success\\\">Save</button>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                     \\n                  </div>\\n                </form>\\n            </ng-template>\\n          </ngb-tab>\\n\\n        </ngb-tabset>\\n      </app-card>\\n    </div>\\n  </div>\\n  \"","import { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/catch';\r\nimport { QuickAdmission } from '../Models/QuickAdmission';\r\nimport { ClasslevelService } from '../services/classlevel.service';\r\n import { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class stuQuickAdmissionEdit implements Resolve<QuickAdmission> { \r\n    constructor(private userService: ClasslevelService,\r\n        private router: Router) {} \r\n        resolve(route: ActivatedRouteSnapshot): Observable<QuickAdmission> {\r\n            return this.userService.getQuickStudent(route.params['id']).pipe(\r\n                catchError(error => { \r\n                    this.router.navigate(['/members']);\r\n                    return of(null);\r\n                })\r\n            );\r\n        }\r\n}","import { Routes, RouterModule } from '@angular/router';\nimport { BasicStuEditComponent } from './basic-stu-edit.component';\nimport { NgModule } from '@angular/core';\nimport { PreventUnsavedChanges } from 'src/app/_gaurd/PreventUnsavedChanges.guard';\n \nconst routes: Routes = [\n  {\n    path: '', \n    component: BasicStuEditComponent \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n \nexport class BasicStudentEditRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdWktZWxlbWVudHMvdWktYmFzaWMvYmFzaWMtc3R1LWVkaXQvYmFzaWMtc3R1LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild, HostListener, EventEmitter, Output } from '@angular/core';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuickAdmission } from 'src/app/Models/QuickAdmission';\nimport { NgForm,  FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { stuEduDetails } from 'src/app/Models/stuEduDetails';\nimport { HttpRequest, HttpClient, HttpEventType } from '@angular/common/http';\nimport { AuthRegister } from 'src/app/Models/AuthRegister';\nimport { AuthService } from 'src/app/services/AuthServices/Auth.service';\n@Component({\n  selector: 'app-basic-stu-edit',\n  templateUrl: './basic-stu-edit.component.html',\n  styleUrls: ['./basic-stu-edit.component.css']\n})\nexport class BasicStuEditComponent implements OnInit {\nstudentEdu:stuEduDetails;\nstudents:QuickAdmission; \ngender:string;\nclasLevel:string;\nselected=true; \nclassLevels:any;\nallClasses:any;\nisChange:boolean=false;\npublic btnLoader: boolean;\npublic btnLoader1: boolean; \nformModel:FormGroup;\nauthRegister:AuthRegister;\npublic progress: number;\npublic message: string;\nrole:string='Student';\n@Output() public onUploadFinished = new EventEmitter();\n@ViewChild('studentForm', {static: true}) studentForm: NgForm;\n@ViewChild('eduForm', {static: true}) eduForm: NgForm;\n@HostListener('window:beforeunload', ['$event'])\nunloadNotification($event: any) {\n  if (this.studentForm.dirty) {\n    $event.returnValue = true;\n  }\n}\n  constructor(private http: HttpClient,private _route:ActivatedRoute,\n    private _classLevel:ClasslevelService,private _authServices:AuthService,\n     private fb:FormBuilder,private toastr: ToastrService) { \n    this.btnLoader1 = false;\n    this.btnLoader = false;}\n\n  ngOnInit() {  \n    this.createPost();\n    this._classLevel.getQuickStudent(+this._route.snapshot.params['id']).subscribe((user: QuickAdmission) => {\n      this.students = user;   \n      this.AssignSelectedDropDown(); \n      this.LevelChangeOnLoad(+this.students.classLevel);  \n     \n    }, error => { \n    }) \n    this._classLevel.getEduStudent(+this._route.snapshot.params['id']).subscribe((eduStudent: stuEduDetails) => { \n      this.studentEdu = eduStudent;\n    }, error => {\n    }) \n  }\n\n  createPost(){\n    this.formModel =this.fb.group({\n      UserName:['',Validators.required], \n      Password:['',Validators.required]\n    }) \n  }\n\n  public uploadFile = (files) => { \n    if (files.length === 0) {\n      return;\n    }\n \n    let fileToUpload = <File>files[0];\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n \n    this.http.post(`http://localhost:5000/api/QuickAdmission/${+this._route.snapshot.params['id']}/Upload`, formData, {reportProgress: true, observe: 'events'})\n      .subscribe(event => {\n        if (event.type === HttpEventType.UploadProgress)\n          this.progress = Math.round(100 * event.loaded / event.total);\n        else if (event.type === HttpEventType.Response) {\n          this.message = 'Upload success.';\n          this.onUploadFinished.emit(event.body);\n        }\n      });\n  } \n\n\n  updateStudent(){ \n    this.btnLoader = true;\n    this._classLevel.updateAdmission(+this._route.snapshot.params['id'],this.students).subscribe(next=>{\n      this.toastr.success('Student Details Updated!', 'Data Saved');\n      this.btnLoader = false;\n     this.studentForm.reset(this.students); \n    },error=>{ \n      this.toastr.error('Error in updating!', 'Failed');\n      this.btnLoader = false; \n    })\n   } \n   \n   //Assign Login Details\n   Save() { \n    this.btnLoader = true;  \n     if (this.formModel.valid) {\n      this.authRegister = Object.assign({}, this.formModel.value);\n      this._authServices.Sturegister(this.authRegister,this.role,this.students.admissionNo).subscribe(() => {\n        this.toastr.success('Role Assigned!', 'Data Saved');\n        this.formModel.reset();\n        this.btnLoader = false;\n        this.createPost();\n      }, error => {\n        this.toastr.error('Role Assigned Failed!', 'Problem in saving Data',error);\n        this.btnLoader = false;\n      },()=>{ \n      });\n    }\n  }\n   \n  registerEduDetails() {\n    this.btnLoader1 = true; \n    this.studentEdu.stuId=+this._route.snapshot.params['id']; \n    this._classLevel.registerUpdateEdu(+this._route.snapshot.params['id'],this.studentEdu).subscribe(next=>{\n      this.toastr.success('Student Educational Details Updated!', 'Data Saved');\n      this.btnLoader1 = false; \n    },error=>{ \n      this.toastr.error('Error in updating!', 'Failed');\n      this.btnLoader1 = false;\n    }) \n  }\n\n  AssignSelectedDropDown(){\n        \n    if (this.students.classLevel == '1') {\n      this.clasLevel = 'Junior';\n    }\n    if (this.students.classLevel == '2') {\n      this.clasLevel = 'Senior';\n    }\n\n\n\n    if (this.students.gender == \"1\") {\n      this.gender = 'Male'\n    }\n    if (this.students.gender == \"2\") {\n      this.gender = 'Female'\n    }\n    if (this.students.gender == \"3\") {\n      this.gender = 'Other'\n    }\n  }\n\n  LevelChange(event){ \n    this.isChange=true;\n    let Ids=event.target.value;\n    this._classLevel.getClass(Ids).subscribe((data)=>{ \n      this.allClasses=data;\n    })\n  }\n\n  LevelChangeOnLoad(id:number){  \n    this._classLevel.getClass(id).subscribe((data)=>{ \n      this.allClasses=data;\n      \n    })\n  }\n  \n// check phoneNo contain alphabet\ncheckAlpha(event) {\n  let val = event.target.value;\n  if (isNaN(val)) {\n    let str = val.substring(0, val.length - 1);\n    event.target.value = str;\n  }\n} \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n import { SharedModule } from 'src/app/theme/shared/shared.module';\n import { BasicStudentEditRoutingModule } from './basic-stu-edit-routing.module';\nimport { BasicStuEditComponent } from './basic-stu-edit.component';\nimport { stuQuickAdmissionEdit } from 'src/app/_resolver/stuQuickAdmissionEdit.resolver';\nimport { NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ToastrModule } from 'ngx-toastr';\nimport { PreventUnsavedChanges } from 'src/app/_gaurd/PreventUnsavedChanges.guard';\n \n@NgModule({\n  imports: [\n  CommonModule,\n  SharedModule,\n  BasicStudentEditRoutingModule,\n  BsDatepickerModule.forRoot(),\n  NgbTabsetModule,\n  ToastrModule.forRoot()\n  ],\n  declarations: [BasicStuEditComponent],\n  providers:[stuQuickAdmissionEdit]\n})\nexport class BasicStuEditModule { }\n"],"sourceRoot":"webpack:///","file":"basic-stu-edit-basic-stu-edit-module-es5.js"}