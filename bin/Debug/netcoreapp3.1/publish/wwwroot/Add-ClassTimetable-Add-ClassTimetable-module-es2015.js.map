{"version":3,"sources":["./src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.component.html","./src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable-routing.module.ts","./src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.component.css","./src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.component.ts","./src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.module.ts","./src/app/services/Acadmics/TimeTable.service.ts","./src/app/services/Employee.service.ts"],"names":[],"mappings":"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","file":"Add-ClassTimetable-Add-ClassTimetable-module-es2015.js","sourcesContent":["export default \"  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n        <select (change)=\\\"LevelChange($event)\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n          <option value=\\\"-1\\\" [selected]=\\\"selected\\\" disabled>--Select--</option>\\n          <option value=\\\"1\\\">Junior</option>\\n          <option value=\\\"2\\\">Senior</option>\\n        </select>  \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class</label>\\n        <select (change)='onOptionsSelected($event)' class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\"> \\n          <option [selected]=\\\"selected\\\">--Select--</option>\\n            <option *ngFor=\\\"let items of allClasses\\\" [ngValue]=\\\"items\\\">{{items.classes}}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class Section</label>\\n        <select (change)='onOptionsSelectedSec($event)' class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n          <option [selected]=\\\"selected\\\">--Select--</option>\\n          <option *ngFor=\\\"let items of sections\\\">{{items}}</option>\\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Section</small>\\n      </div>\\n    </div>\\n    \\n   \\n    <div class=\\\"col-lg-2\\\">\\n        <br>\\n      <div class=\\\"form-group\\\"> \\n        <button style=\\\"margin-top: 8px;\\\" (click)=\\\"GetTimeTable()\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i> Get</button>\\n      &nbsp;\\n      </div>\\n    </div>\\n  \\n  </div> \\n  <br>\\n  <br>\\n  <br>\\n  <hr>\\n \\n  <div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\"> \\n    <ngb-tabset>\\n      <ngb-tab title=\\\"Monday\\\">\\n        <ng-template ngbTabContent>\\n          <app-card cardTitle=\\\"Basic Table\\\" blockClass=\\\"table-border-style\\\">\\n            <div *ngIf=\\\"isShow==true\\\" class=\\\"table-responsive\\\">\\n            <form #form=\\\"ngForm\\\" id=\\\"myform\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"SaveTTMon(tttable)\\\">\\n              <table class=\\\"table\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Subject</th>\\n                    <th>Teacher</th>\\n                    <th>Time From</th>\\n                    <th>Time To</th>\\n                    <th>Room No</th>\\n                    <th>Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <!-- By Adding -->\\n                  <tr *ngFor=\\\"let item of tttable; let i=index\\\"> \\n                    <td>\\n                      <select [(ngModel)]=\\\"item.Subject\\\" [name]=\\\"'Subject'+i\\\" class=\\\"form-control\\\" #Subject=\\\"ngModel\\\"\\n                        class=\\\"form-control\\\" [id]=\\\"'subject'+i\\\">\\n                        <option *ngFor=\\\"let items of subjects\\\" [selected]=\\\"items.codeId===item.Subject\\\"\\n                          [ngValue]=\\\"items.codeId\\\">\\n                          {{items.Subject}} ({{items.codeId}})</option>\\n                      </select>\\n                    </td>\\n                    <td>\\n                      <select [name]=\\\"'teacher'+i\\\" #teacher=\\\"ngModel\\\" [(ngModel)]=\\\"item.teacher\\\" class=\\\"form-control\\\"\\n                        [id]=\\\"'teacher'+i\\\">\\n                        <option *ngFor=\\\"let items of emp\\\" [selected]=\\\"items.EmpId===item.teacher\\\"\\n                          [ngValue]=\\\"items.EmpId\\\">{{items.firstName}}\\n                          {{items.lastName}} ({{items.EmpId}})</option>\\n                      </select>\\n                    </td>\\n                    <td> <input [id]=\\\"'timefrom'+i\\\" [name]=\\\"'timefrom'+i\\\" #timefrom=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.timefrom\\\" [ngxTimepicker]=\\\"picker3\\\" type=\\\"text\\\" [value]=\\\"item.timefrom\\\"\\n                        class=\\\"form-control\\\" />\\n                         <ngx-material-timepicker #picker3></ngx-material-timepicker> \\n                    </td>\\n                    <td>\\n                      <input type=\\\"text\\\" [id]=\\\"'timeTo'+i\\\" [name]=\\\"'timeTo'+i\\\" #timeTo=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.timeTo\\\" class=\\\"form-control\\\" [ngxTimepicker]=\\\"picker4\\\"/>\\n                        <ngx-material-timepicker #picker4></ngx-material-timepicker>\\n\\n                      <input type=\\\"hidden\\\" [id]=\\\"'WeekDay'+i\\\" name=\\\"WeekDay\\\" #WeekDay=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.WeekDay\\\" class=\\\"form-control\\\" />\\n                    </td>\\n                    <td><input type=\\\"number\\\" [id]=\\\"'RoomNo'+i\\\" [name]=\\\"'RoomNo'+i\\\" #RoomNo=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.RoomNo\\\" class=\\\"form-control\\\" />\\n                    </td>\\n                    <td>\\n                      <input type=\\\"button\\\" class=\\\"btn btn-danger\\\" value=\\\"Remove\\\" (click)=\\\"DeleteSTT(item.Id)\\\" />\\n                    </td>\\n                  </tr>\\n                </tbody>\\n                <tfoot>\\n                 &nbsp;&nbsp; <button [disabled]=\\\"!form.dirty\\\" form=\\\"myform\\\" type=\\\"submit\\\"\\n                     class=\\\"btn btn-primary event-btn m-2\\\">\\n                     <span *ngIf=\\\"this.btnLoader\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n                     <span *ngIf=\\\"this.btnLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\n                     <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-refresh\\\"></i> Update</span>\\n                   </button> \\n                </tfoot>\\n              </table>\\n            </form>\\n            <!-- Adding -->\\n             <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"onSubmit()\\\">  \\n               <table class=\\\"table table-bordered\\\" formArrayName=\\\"quantities\\\">\\n                 <tr>\\n                   <th colspan=\\\"5\\\">Add Multiple TimeTable:</th>\\n                   <th width=\\\"150px\\\">\\n                      <button style=\\\"margin-top: 8px; color: white;\\\" (click)=\\\"AddRow()\\\" class=\\\"btn btn-info\\\"\\n                        type=\\\"button\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\n                   </th>\\n                 </tr>\\n                 <tr *ngFor=\\\"let quantity of quantities().controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                   <td>\\n                     Subject :\\n                      <select class=\\\"form-control\\\" formControlName=\\\"Subject\\\"\\n                        class=\\\"form-control\\\" [id]=\\\"'subject'+i\\\">\\n                        <option *ngFor=\\\"let items of subjects\\\" \\n                          [ngValue]=\\\"items.codeId\\\">\\n                          {{items.Subject}} ({{items.codeId}})</option>\\n                      </select> \\n                   </td>\\n                   <td>\\n                     Teacher:\\n                      <select class=\\\"form-control\\\" formControlName=\\\"teacher\\\" class=\\\"form-control\\\" [id]=\\\"'teacher'+i\\\">\\n                        <option *ngFor=\\\"let items of emp\\\" [ngValue]=\\\"items.EmpId\\\">\\n                         {{items.firstName}}\\n                         {{items.lastName}} ({{items.EmpId}})</option>\\n                      </select>\\n                   </td>\\n                    <td>\\n                      Time From:\\n                      <input class=\\\"form-control\\\" formControlName=\\\"timefrom\\\" [ngxTimepicker]=\\\"picker\\\">\\n                      <ngx-material-timepicker #picker></ngx-material-timepicker> \\n                    </td>\\n                     <td>\\n                       Time To:\\n                         <input class=\\\"form-control\\\" formControlName=\\\"timeTo\\\" [ngxTimepicker]=\\\"picker1\\\">\\n                         <ngx-material-timepicker #picker1></ngx-material-timepicker> \\n                     </td>\\n                       <td>\\n                         Room No:\\n                         <input type=\\\"number\\\" formControlName=\\\"RoomNo\\\" class=\\\"form-control\\\">\\n                       </td>\\n                   <td>\\n                     <button (click)=\\\"removeQuantity(i)\\\" class=\\\"btn btn-danger\\\">Remove</button>\\n                   </td>\\n                 </tr>\\n                    <tfoot>\\n                      &nbsp;&nbsp; <button [disabled]=\\\"!productForm.dirty\\\"  type=\\\"submit\\\"\\n                        class=\\\"btn btn-primary event-btn m-2\\\">\\n                        <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n                        <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"load-text\\\"> Loading...</span>\\n                        <span *ngIf=\\\"!this.btnLoader1\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-refresh\\\"></i> Submit</span>\\n                      </button>\\n                    </tfoot>\\n               </table>\\n \\n             </form> \\n            </div>\\n          </app-card>\\n        </ng-template>\\n      </ngb-tab> \\n  \\n      <ngb-tab title=\\\"Tuesday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab two content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Wednesday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Thrusday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Friday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Saturday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n   \\n  </div>\\n  </div>\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';  \r\nimport { AddClassTimetableComponent } from './Add-ClassTimetable.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddClassTimetableComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddClassTimetableRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcGFnZXMvQWNhZG1pY3MvQWRkLUNsYXNzVGltZXRhYmxlL0FkZC1DbGFzc1RpbWV0YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, NgForm } from '@angular/forms';\nimport { SubjectService } from 'src/app/services/Acadmics/Subject.service';\nimport { Subject } from 'src/app/Models/Subject';\nimport { EmployeeService } from 'src/app/services/Employee.service';\nimport { EmpRegister } from 'src/app/Models/EmpRegister';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { Class } from 'src/app/Models/Class';\nimport { TimeTable } from 'src/app/Models/TimeTable';\nimport { TimeTableService } from 'src/app/services/Acadmics/TimeTable.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-Add-ClassTimetable',\n  templateUrl: './Add-ClassTimetable.component.html',\n  styleUrls: ['./Add-ClassTimetable.component.css']\n})\nexport class AddClassTimetableComponent implements OnInit {\n  subjects: Subject[];\n  emp: EmpRegister[];\n  classLevels: any;\n  allClasses: any;\n  selected = true;\n  selectedSubject=false;\n  selectedLevel;\n  selectedSec;\n  allSec: Class;\n  sections: string[];\n  tttable:TimeTable[]; \n  tttableMon: TimeTable[]; \n  tt:TimeTable;\n  isShow:boolean;\n  ttMaster: Array<TimeTable>=[]; \n  productForm: FormGroup;\n\n  Id: number;\n  public btnLoader: boolean;\n  public btnLoader1: boolean;\n\n  constructor(private _secServices: SubjectService, private fb: FormBuilder,\n    private _ttServices: TimeTableService, private toastr: ToastrService,\n    private _classLevel: ClasslevelService, private _empServices: EmployeeService) {\n    this.productForm = this.fb.group({\n      quantities: this.fb.array([]),\n    });\n  } \n  quantities(): FormArray {\n    return this.productForm.get(\"quantities\") as FormArray\n  }\n\n  newQuantity(): FormGroup {\n    return this.fb.group({\n      Classes:this.selectedLevel,\n      Sec:this.selectedSec,\n      Subject: ['',Validators.required],\n      teacher: ['', Validators.required],\n      timefrom: ['', Validators.required],\n      timeTo: ['', Validators.required],\n      RoomNo: ['', Validators.required],\n      WeekDay:'Monday'\n    })\n  }\n  onSubmit() { \n    this.tttableMon=this.productForm.value; \n    this.btnLoader1 = true;\n    this._ttServices.PostTimeTable(this.tttableMon).subscribe(() => {\n      this.toastr.success('Time Table Saved!', 'Data Saved');\n      this.btnLoader1 = false;\n    }, error => {\n      this.toastr.error('Time Table Saving Failed!', 'Problem in saving Data', error);\n      this.btnLoader1 = false;\n    });\n  }\n  DeleteSTT(id:number) {\n    var isConfirm = confirm(\"Are You Sure!\");\n    if (isConfirm == true) {\n      this._ttServices.DelTimetable(id).subscribe(() => {\n        this.toastr.success(\"Section Deleted Successfully\");\n        this.GetTimeTable(); \n      })\n    } else { \n    }\n\n  }\n  addQuantity() {\n    this.quantities().push(this.newQuantity());\n  }\n\n  AddRow() {\n    this.addQuantity();\n  }\n  \n  ngOnInit() { \n    this.isShow=false;\n    this.selectedSubject=false;\n   \n    this.loadAllSubject();\n    this.loadAllTeacher();\n  }\n  removeQuantity(i: number) {\n    this.quantities().removeAt(i);\n  }\n  LevelChange(event) {\n    let Ids = event.target.value;\n    this._classLevel.getClass(Ids).subscribe((data) => {\n      this.allClasses = data;\n    })\n  }\n \n  GetTimeTable(){ \n    this._ttServices.getTimetbl(this.selectedLevel,this.selectedSec).subscribe((data: TimeTable[]) => {\n      this.tttable = data; \n      if(this.tttable.length==0){\n        this.isShow = false;\n        this.toastr.info('No Data Avalable To Display');\n      } \n        else{\n        this.isShow = true;\n        }\n    });\n  }\n \n  onOptionsSelectedSec(event){\n    this.selectedSec=event.target.value;\n  }\n\n  onOptionsSelected(event) {\n    this.selectedLevel = event.target.value;  \n    this._classLevel.getSection(this.selectedLevel).subscribe((data: Class) => {\n      this.allSec = data;\n      this.sections = this.allSec.sections.split(',');\n    })\n  }\n  loadAllSubject() {\n    this._secServices.getSubject().subscribe((data: Subject[]) => {\n      this.subjects = data;\n    });\n  }\n\n  loadAllTeacher() {\n    this._empServices.getTeacher().subscribe((data: EmpRegister[]) => {\n      this.emp = data;\n    });\n  }\n  \n  SaveTTMon(form) {\n    if (this.selectedLevel == null)\n      return alert(\"Select Appropriate Classe\");\n\n    if (this.selectedSec == null)\n      return alert(\"Select Appropriate Section\");\n\n    this.btnLoader = true;\n      this._ttServices.updateTT(form).subscribe(() => {\n          this.toastr.success('Time Table Updated!', 'Data Saved');\n        this.btnLoader = false;\n        }, error => { \n          this.toastr.error('Time Table Class Failed!', 'Problem in saving Data', error);\n          this.btnLoader = false;\n        });\n    } \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddClassTimetableComponent } from './Add-ClassTimetable.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { AddClassTimetableRoutingModule } from './Add-ClassTimetable-routing.module';  \nimport { NgbTabsetModule, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    NgbTabsetModule,\n    ReactiveFormsModule,\n    AddClassTimetableRoutingModule,\n    NgxMaterialTimepickerModule\n  ],\n  declarations: [AddClassTimetableComponent]\n})\nexport class AddClassTimetableModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { TimeTable } from 'src/app/Models/TimeTable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeTableService {\n  baseURL = environment.apiUrl;\n  constructor(private _http: HttpClient) { }\n\n  getTimetbl(classes, sec) {\n    return this._http.get(this.baseURL + 'TimeTable' + '/' + classes + '/' + sec);\n  }\n\n  PostTimeTable(table: TimeTable[]) {\n    return this._http.post(this.baseURL + 'TimeTable' + '/register', table);\n  }\n  updateTT(tt: TimeTable[]) {\n    return this._http.put(this.baseURL + 'TimeTable', tt);\n  }\n  DelTimetable(id: number) {\n    return this._http.delete(this.baseURL + 'TimeTable' + '/' + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http'; \nimport { EmpRegister } from '../Models/EmpRegister';\nimport { PaginatedResult } from '../Models/Pagination';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  baseURL=environment.apiUrl;\n  constructor(private _http:HttpClient) { }\n\n  getEmp(id): Observable<EmpRegister> {\n    return this._http.get<EmpRegister>(this.baseURL + 'Employee/EmpIds/' + id);\n  }\n  getEmpRegistration(sessionId:number,page?, itemsPerPage?, userParams?): Observable<PaginatedResult<EmpRegister[]>> {\n    const paginatedResult: PaginatedResult<EmpRegister[]> = new PaginatedResult<EmpRegister[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n\n    if (userParams != null) { \n      params = params.append('AdmissionNo', userParams.AdmissionNo);\n      params = params.append('OrderBy', userParams.OrderBy);\n      params = params.append('Gender', userParams.Gender);\n    }\n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/'+sessionId, { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getTeacher(){ \n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/') \n  }\n\n  register(empRegister: EmpRegister) { \n  var stringStanders=  empRegister.standers.toString(); \n  empRegister.standers=stringStanders; \n    return this._http.post(this.baseURL + 'Employee/register', empRegister);\n  } \n  updateEmployee(id:number,emp:EmpRegister){\n    return  this._http.put(this.baseURL+'Employee/' + id,emp);\n    }\n    getLastEmpRegisterId(){\n      return this._http.get(this.baseURL+'Employee/' + 'last/');\n    }\n}"],"sourceRoot":"webpack:///"}