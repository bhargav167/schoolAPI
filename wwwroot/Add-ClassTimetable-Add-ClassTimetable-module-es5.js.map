{"version":3,"sources":["src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.component.html","src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable-routing.module.ts","src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.component.css","src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.component.ts","src/app/demo/pages/Acadmics/Add-ClassTimetable/Add-ClassTimetable.module.ts","src/app/services/Acadmics/TimeTable.service.ts","src/app/services/Employee.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class level</label>\\n        <select (change)=\\\"LevelChange($event)\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n          <option value=\\\"-1\\\" [selected]=\\\"selected\\\" disabled>--Select--</option>\\n          <option value=\\\"1\\\">Junior</option>\\n          <option value=\\\"2\\\">Senior</option>\\n        </select>  \\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class</label>\\n        <select (change)='onOptionsSelected($event)' class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\"> \\n          <option [selected]=\\\"selected\\\">--Select--</option>\\n            <option *ngFor=\\\"let items of allClasses\\\" [ngValue]=\\\"items\\\">{{items.classes}}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Class Section</label>\\n        <select (change)='onOptionsSelectedSec($event)' class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n          <option [selected]=\\\"selected\\\">--Select--</option>\\n          <option *ngFor=\\\"let items of sections\\\">{{items}}</option>\\n        </select>\\n        <small id=\\\"emailHelp\\\" class=\\\"invalid-feedback\\\">Please select Section</small>\\n      </div>\\n    </div>\\n    \\n   \\n    <div class=\\\"col-lg-2\\\">\\n        <br>\\n      <div class=\\\"form-group\\\"> \\n        <button style=\\\"margin-top: 8px;\\\" (click)=\\\"GetTimeTable()\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i> Get</button>\\n      &nbsp;\\n      </div>\\n    </div>\\n  \\n  </div> \\n  <br>\\n  <br>\\n  <br>\\n  <hr>\\n \\n  <div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\"> \\n    <ngb-tabset>\\n      <ngb-tab title=\\\"Monday\\\">\\n        <ng-template ngbTabContent>\\n          <app-card cardTitle=\\\"Basic Table\\\" blockClass=\\\"table-border-style\\\">\\n            <div *ngIf=\\\"isShow==true\\\" class=\\\"table-responsive\\\">\\n            <form #form=\\\"ngForm\\\" id=\\\"myform\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"SaveTTMon(tttable)\\\">\\n              <table class=\\\"table\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Subject</th>\\n                    <th>Teacher</th>\\n                    <th>Time From</th>\\n                    <th>Time To</th>\\n                    <th>Room No</th>\\n                    <th>Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <!-- By Adding -->\\n                  <tr *ngFor=\\\"let item of tttable; let i=index\\\"> \\n                    <td>\\n                      <select [(ngModel)]=\\\"item.Subject\\\" [name]=\\\"'Subject'+i\\\" class=\\\"form-control\\\" #Subject=\\\"ngModel\\\"\\n                        class=\\\"form-control\\\" [id]=\\\"'subject'+i\\\">\\n                        <option *ngFor=\\\"let items of subjects\\\" [selected]=\\\"items.codeId===item.Subject\\\"\\n                          [ngValue]=\\\"items.codeId\\\">\\n                          {{items.Subject}} ({{items.codeId}})</option>\\n                      </select>\\n                    </td>\\n                    <td>\\n                      <select [name]=\\\"'teacher'+i\\\" #teacher=\\\"ngModel\\\" [(ngModel)]=\\\"item.teacher\\\" class=\\\"form-control\\\"\\n                        [id]=\\\"'teacher'+i\\\">\\n                        <option *ngFor=\\\"let items of emp\\\" [selected]=\\\"items.EmpId===item.teacher\\\"\\n                          [ngValue]=\\\"items.EmpId\\\">{{items.firstName}}\\n                          {{items.lastName}} ({{items.EmpId}})</option>\\n                      </select>\\n                    </td>\\n                    <td> <input [id]=\\\"'timefrom'+i\\\" [name]=\\\"'timefrom'+i\\\" #timefrom=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.timefrom\\\" [ngxTimepicker]=\\\"picker3\\\" type=\\\"text\\\" [value]=\\\"item.timefrom\\\"\\n                        class=\\\"form-control\\\" />\\n                         <ngx-material-timepicker #picker3></ngx-material-timepicker> \\n                    </td>\\n                    <td>\\n                      <input type=\\\"text\\\" [id]=\\\"'timeTo'+i\\\" [name]=\\\"'timeTo'+i\\\" #timeTo=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.timeTo\\\" class=\\\"form-control\\\" [ngxTimepicker]=\\\"picker4\\\"/>\\n                        <ngx-material-timepicker #picker4></ngx-material-timepicker>\\n\\n                      <input type=\\\"hidden\\\" [id]=\\\"'WeekDay'+i\\\" name=\\\"WeekDay\\\" #WeekDay=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.WeekDay\\\" class=\\\"form-control\\\" />\\n                    </td>\\n                    <td><input type=\\\"number\\\" [id]=\\\"'RoomNo'+i\\\" [name]=\\\"'RoomNo'+i\\\" #RoomNo=\\\"ngModel\\\"\\n                        [(ngModel)]=\\\"item.RoomNo\\\" class=\\\"form-control\\\" />\\n                    </td>\\n                    <td>\\n                      <input type=\\\"button\\\" class=\\\"btn btn-danger\\\" value=\\\"Remove\\\" (click)=\\\"DeleteSTT(item.Id)\\\" />\\n                    </td>\\n                  </tr>\\n                </tbody>\\n                <tfoot>\\n                 &nbsp;&nbsp; <button [disabled]=\\\"!form.dirty\\\" form=\\\"myform\\\" type=\\\"submit\\\"\\n                     class=\\\"btn btn-primary event-btn m-2\\\">\\n                     <span *ngIf=\\\"this.btnLoader\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n                     <span *ngIf=\\\"this.btnLoader\\\" class=\\\"load-text\\\"> Loading...</span>\\n                     <span *ngIf=\\\"!this.btnLoader\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-refresh\\\"></i> Update</span>\\n                   </button> \\n                </tfoot>\\n              </table>\\n            </form>\\n            <!-- Adding -->\\n             <form [formGroup]=\\\"productForm\\\" (ngSubmit)=\\\"onSubmit()\\\">  \\n               <table class=\\\"table table-bordered\\\" formArrayName=\\\"quantities\\\">\\n                 <tr>\\n                   <th colspan=\\\"5\\\">Add Multiple TimeTable:</th>\\n                   <th width=\\\"150px\\\">\\n                      <button style=\\\"margin-top: 8px; color: white;\\\" (click)=\\\"AddRow()\\\" class=\\\"btn btn-info\\\"\\n                        type=\\\"button\\\"><i class=\\\"fa fa-plus\\\"></i> Add</button>\\n                   </th>\\n                 </tr>\\n                 <tr *ngFor=\\\"let quantity of quantities().controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                   <td>\\n                     Subject :\\n                      <select class=\\\"form-control\\\" formControlName=\\\"Subject\\\"\\n                        class=\\\"form-control\\\" [id]=\\\"'subject'+i\\\">\\n                        <option *ngFor=\\\"let items of subjects\\\" \\n                          [ngValue]=\\\"items.codeId\\\">\\n                          {{items.Subject}} ({{items.codeId}})</option>\\n                      </select> \\n                   </td>\\n                   <td>\\n                     Teacher:\\n                      <select class=\\\"form-control\\\" formControlName=\\\"teacher\\\" class=\\\"form-control\\\" [id]=\\\"'teacher'+i\\\">\\n                        <option *ngFor=\\\"let items of emp\\\" [ngValue]=\\\"items.EmpId\\\">\\n                         {{items.firstName}}\\n                         {{items.lastName}} ({{items.EmpId}})</option>\\n                      </select>\\n                   </td>\\n                    <td>\\n                      Time From:\\n                      <input class=\\\"form-control\\\" formControlName=\\\"timefrom\\\" [ngxTimepicker]=\\\"picker\\\">\\n                      <ngx-material-timepicker #picker></ngx-material-timepicker> \\n                    </td>\\n                     <td>\\n                       Time To:\\n                         <input class=\\\"form-control\\\" formControlName=\\\"timeTo\\\" [ngxTimepicker]=\\\"picker1\\\">\\n                         <ngx-material-timepicker #picker1></ngx-material-timepicker> \\n                     </td>\\n                       <td>\\n                         Room No:\\n                         <input type=\\\"number\\\" formControlName=\\\"RoomNo\\\" class=\\\"form-control\\\">\\n                       </td>\\n                   <td>\\n                     <button (click)=\\\"removeQuantity(i)\\\" class=\\\"btn btn-danger\\\">Remove</button>\\n                   </td>\\n                 </tr>\\n                    <tfoot>\\n                      &nbsp;&nbsp; <button [disabled]=\\\"!productForm.dirty\\\"  type=\\\"submit\\\"\\n                        class=\\\"btn btn-primary event-btn m-2\\\">\\n                        <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"></span>\\n                        <span *ngIf=\\\"this.btnLoader1\\\" class=\\\"load-text\\\"> Loading...</span>\\n                        <span *ngIf=\\\"!this.btnLoader1\\\" class=\\\"btn-text\\\"><i class=\\\"fa fa-refresh\\\"></i> Submit</span>\\n                      </button>\\n                    </tfoot>\\n               </table>\\n \\n             </form> \\n            </div>\\n          </app-card>\\n        </ng-template>\\n      </ngb-tab> \\n  \\n      <ngb-tab title=\\\"Tuesday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab two content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Wednesday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Thrusday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Friday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab title=\\\"Saturday\\\">\\n        <ng-template ngbTabContent>\\n          <p>Tab three content here</p>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n   \\n  </div>\\n  </div>\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';  \r\nimport { AddClassTimetableComponent } from './Add-ClassTimetable.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddClassTimetableComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AddClassTimetableRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vcGFnZXMvQWNhZG1pY3MvQWRkLUNsYXNzVGltZXRhYmxlL0FkZC1DbGFzc1RpbWV0YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, NgForm } from '@angular/forms';\nimport { SubjectService } from 'src/app/services/Acadmics/Subject.service';\nimport { Subject } from 'src/app/Models/Subject';\nimport { EmployeeService } from 'src/app/services/Employee.service';\nimport { EmpRegister } from 'src/app/Models/EmpRegister';\nimport { ClasslevelService } from 'src/app/services/classlevel.service';\nimport { Class } from 'src/app/Models/Class';\nimport { TimeTable } from 'src/app/Models/TimeTable';\nimport { TimeTableService } from 'src/app/services/Acadmics/TimeTable.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-Add-ClassTimetable',\n  templateUrl: './Add-ClassTimetable.component.html',\n  styleUrls: ['./Add-ClassTimetable.component.css']\n})\nexport class AddClassTimetableComponent implements OnInit {\n  subjects: Subject[];\n  emp: EmpRegister[];\n  classLevels: any;\n  allClasses: any;\n  selected = true;\n  selectedSubject=false;\n  selectedLevel;\n  selectedSec;\n  allSec: Class;\n  sections: string[];\n  tttable:TimeTable[]; \n  tttableMon: TimeTable[]; \n  tt:TimeTable;\n  isShow:boolean;\n  ttMaster: Array<TimeTable>=[]; \n  productForm: FormGroup;\n\n  Id: number;\n  public btnLoader: boolean;\n  public btnLoader1: boolean;\n\n  constructor(private _secServices: SubjectService, private fb: FormBuilder,\n    private _ttServices: TimeTableService, private toastr: ToastrService,\n    private _classLevel: ClasslevelService, private _empServices: EmployeeService) {\n    this.productForm = this.fb.group({\n      quantities: this.fb.array([]),\n    });\n  } \n  quantities(): FormArray {\n    return this.productForm.get(\"quantities\") as FormArray\n  }\n\n  newQuantity(): FormGroup {\n    return this.fb.group({\n      Classes:this.selectedLevel,\n      Sec:this.selectedSec,\n      Subject: ['',Validators.required],\n      teacher: ['', Validators.required],\n      timefrom: ['', Validators.required],\n      timeTo: ['', Validators.required],\n      RoomNo: ['', Validators.required],\n      WeekDay:'Monday'\n    })\n  }\n  onSubmit() { \n    this.tttableMon=this.productForm.value; \n    this.btnLoader1 = true;\n    this._ttServices.PostTimeTable(this.tttableMon).subscribe(() => {\n      this.toastr.success('Time Table Saved!', 'Data Saved');\n      this.btnLoader1 = false;\n    }, error => {\n      this.toastr.error('Time Table Saving Failed!', 'Problem in saving Data', error);\n      this.btnLoader1 = false;\n    });\n  }\n  DeleteSTT(id:number) {\n    var isConfirm = confirm(\"Are You Sure!\");\n    if (isConfirm == true) {\n      this._ttServices.DelTimetable(id).subscribe(() => {\n        this.toastr.success(\"Section Deleted Successfully\");\n        this.GetTimeTable(); \n      })\n    } else { \n    }\n\n  }\n  addQuantity() {\n    this.quantities().push(this.newQuantity());\n  }\n\n  AddRow() {\n    this.addQuantity();\n  }\n  \n  ngOnInit() { \n    this.isShow=false;\n    this.selectedSubject=false;\n   \n    this.loadAllSubject();\n    this.loadAllTeacher();\n  }\n  removeQuantity(i: number) {\n    this.quantities().removeAt(i);\n  }\n  LevelChange(event) {\n    let Ids = event.target.value;\n    this._classLevel.getClass(Ids).subscribe((data) => {\n      this.allClasses = data;\n    })\n  }\n \n  GetTimeTable(){ \n    this._ttServices.getTimetbl(this.selectedLevel,this.selectedSec).subscribe((data: TimeTable[]) => {\n      this.tttable = data; \n      if(this.tttable.length==0){\n        this.isShow = false;\n        this.toastr.info('No Data Avalable To Display');\n      } \n        else{\n        this.isShow = true;\n        }\n    });\n  }\n \n  onOptionsSelectedSec(event){\n    this.selectedSec=event.target.value;\n  }\n\n  onOptionsSelected(event) {\n    this.selectedLevel = event.target.value;  \n    this._classLevel.getSection(this.selectedLevel).subscribe((data: Class) => {\n      this.allSec = data;\n      this.sections = this.allSec.sections.split(',');\n    })\n  }\n  loadAllSubject() {\n    this._secServices.getSubject().subscribe((data: Subject[]) => {\n      this.subjects = data;\n    });\n  }\n\n  loadAllTeacher() {\n    this._empServices.getTeacher().subscribe((data: EmpRegister[]) => {\n      this.emp = data;\n    });\n  }\n  \n  SaveTTMon(form) {\n    if (this.selectedLevel == null)\n      return alert(\"Select Appropriate Classe\");\n\n    if (this.selectedSec == null)\n      return alert(\"Select Appropriate Section\");\n\n    this.btnLoader = true;\n      this._ttServices.updateTT(form).subscribe(() => {\n          this.toastr.success('Time Table Updated!', 'Data Saved');\n        this.btnLoader = false;\n        }, error => { \n          this.toastr.error('Time Table Class Failed!', 'Problem in saving Data', error);\n          this.btnLoader = false;\n        });\n    } \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddClassTimetableComponent } from './Add-ClassTimetable.component';\nimport { SharedModule } from 'src/app/theme/shared/shared.module';\nimport { AddClassTimetableRoutingModule } from './Add-ClassTimetable-routing.module';  \nimport { NgbTabsetModule, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    NgbTabsetModule,\n    ReactiveFormsModule,\n    AddClassTimetableRoutingModule,\n    NgxMaterialTimepickerModule\n  ],\n  declarations: [AddClassTimetableComponent]\n})\nexport class AddClassTimetableModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { TimeTable } from 'src/app/Models/TimeTable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeTableService {\n  baseURL = environment.apiUrl;\n  constructor(private _http: HttpClient) { }\n\n  getTimetbl(classes, sec) {\n    return this._http.get(this.baseURL + 'TimeTable' + '/' + classes + '/' + sec);\n  }\n\n  PostTimeTable(table: TimeTable[]) {\n    return this._http.post(this.baseURL + 'TimeTable' + '/register', table);\n  }\n  updateTT(tt: TimeTable[]) {\n    return this._http.put(this.baseURL + 'TimeTable', tt);\n  }\n  DelTimetable(id: number) {\n    return this._http.delete(this.baseURL + 'TimeTable' + '/' + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http'; \nimport { EmpRegister } from '../Models/EmpRegister';\nimport { PaginatedResult } from '../Models/Pagination';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  baseURL=environment.apiUrl;\n  constructor(private _http:HttpClient) { }\n\n  getEmp(id): Observable<EmpRegister> {\n    return this._http.get<EmpRegister>(this.baseURL + 'Employee/EmpIds/' + id);\n  }\n  getEmpRegistration(sessionId:number,page?, itemsPerPage?, userParams?): Observable<PaginatedResult<EmpRegister[]>> {\n    const paginatedResult: PaginatedResult<EmpRegister[]> = new PaginatedResult<EmpRegister[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    } \n\n    if (userParams != null) { \n      params = params.append('AdmissionNo', userParams.AdmissionNo);\n      params = params.append('OrderBy', userParams.OrderBy);\n      params = params.append('Gender', userParams.Gender);\n    }\n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/'+sessionId, { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getTeacher(){ \n    return this._http.get<EmpRegister[]>(this.baseURL + 'Employee/AllEmpRegistration/') \n  }\n\n  register(empRegister: EmpRegister) { \n  var stringStanders=  empRegister.standers.toString(); \n  empRegister.standers=stringStanders; \n    return this._http.post(this.baseURL + 'Employee/register', empRegister);\n  } \n  updateEmployee(id:number,emp:EmpRegister){\n    return  this._http.put(this.baseURL+'Employee/' + id,emp);\n    }\n    getLastEmpRegisterId(){\n      return this._http.get(this.baseURL+'Employee/' + 'last/');\n    }\n}"],"sourceRoot":"webpack:///","file":"Add-ClassTimetable-Add-ClassTimetable-module-es5.js"}